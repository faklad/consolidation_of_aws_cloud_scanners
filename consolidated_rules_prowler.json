[{"id": "codebuild_project_user_controlled_buildspec", "title": "Ensure CodeBuild Project uses a controlled buildspec", "descriptiom": "Ensure CodeBuild Project uses a controlled buildspec", "tool": "prowler", "service": "codebuild"}, {"id": "codebuild_project_older_90_days", "title": "Ensure CodeBuild Project has been invoked in the last 90 days", "descriptiom": "Ensure CodeBuild Project has been invoked in the last 90 days", "tool": "prowler", "service": "codebuild"}, {"id": "organizations_scp_check_deny_regions", "title": "Check if AWS Regions are restricted with SCP policies", "descriptiom": "As best practice, AWS Regions should be restricted and only allow the ones that are needed.", "tool": "prowler", "service": "organizations"}, {"id": "organizations_tags_policies_enabled_and_attached", "title": "Check if an AWS Organization has tags policies enabled and attached.", "descriptiom": "Check if an AWS Organization has tags policies enabled and attached.", "tool": "prowler", "service": "organizations"}, {"id": "organizations_delegated_administrators", "title": "Check if AWS Organizations delegated administrators are trusted", "descriptiom": "This check verify if there are AWS Organizations delegated administrators and if they are trusted (you can define your trusted delegated administrator in Prowler configuration)", "tool": "prowler", "service": "organizations"}, {"id": "organizations_account_part_of_organizations", "title": "Check if account is part of an AWS Organizations", "descriptiom": "Ensure that AWS Organizations service is currently in use.", "tool": "prowler", "service": "organizations"}, {"id": "shield_advanced_protection_in_classic_load_balancers", "title": "Check if Classic Load Balancers are protected by AWS Shield Advanced.", "descriptiom": "Check if Classic Load Balancers are protected by AWS Shield Advanced.", "tool": "prowler", "service": "shield"}, {"id": "shield_advanced_protection_in_route53_hosted_zones", "title": "Check if Route53 hosted zones are protected by AWS Shield Advanced.", "descriptiom": "Check if Route53 hosted zones are protected by AWS Shield Advanced.", "tool": "prowler", "service": "shield"}, {"id": "shield_advanced_protection_in_cloudfront_distributions", "title": "Check if Cloudfront distributions are protected by AWS Shield Advanced.", "descriptiom": "Check if Cloudfront distributions are protected by AWS Shield Advanced.", "tool": "prowler", "service": "shield"}, {"id": "shield_advanced_protection_in_global_accelerators", "title": "Check if Global Accelerators are protected by AWS Shield Advanced.", "descriptiom": "Check if Global Accelerators are protected by AWS Shield Advanced.", "tool": "prowler", "service": "shield"}, {"id": "shield_advanced_protection_in_associated_elastic_ips", "title": "Check if Elastic IP addresses with associations are protected by AWS Shield Advanced.", "descriptiom": "Check if Elastic IP addresses with associations are protected by AWS Shield Advanced.", "tool": "prowler", "service": "shield"}, {"id": "shield_advanced_protection_in_internet_facing_load_balancers", "title": "Check if internet-facing Application Load Balancers are protected by AWS Shield Advanced.", "descriptiom": "Check if internet-facing Application Load Balancers are protected by AWS Shield Advanced.", "tool": "prowler", "service": "shield"}, {"id": "ssm_documents_set_as_public", "title": "Check if there are SSM Documents set as public.", "descriptiom": "Check if there are SSM Documents set as public.", "tool": "prowler", "service": "ssm"}, {"id": "ssm_document_secrets", "title": "Find secrets in SSM Documents.", "descriptiom": "Find secrets in SSM Documents.", "tool": "prowler", "service": "ssm"}, {"id": "ssm_managed_compliant_patching", "title": "Check if EC2 instances managed by Systems Manager are compliant with patching requirements.", "descriptiom": "Check if EC2 instances managed by Systems Manager are compliant with patching requirements.", "tool": "prowler", "service": "ssm"}, {"id": "secretsmanager_automatic_rotation_enabled", "title": "Check if Secrets Manager secret rotation is enabled.", "descriptiom": "Check if Secrets Manager secret rotation is enabled.", "tool": "prowler", "service": "secretsmanager"}, {"id": "kms_cmk_are_used", "title": "Check if there are CMK KMS keys not used.", "descriptiom": "Check if there are CMK KMS keys not used.", "tool": "prowler", "service": "kms"}, {"id": "kms_key_not_publicly_accessible", "title": "Check exposed KMS keys", "descriptiom": "Check exposed KMS keys", "tool": "prowler", "service": "kms"}, {"id": "kms_cmk_rotation_enabled", "title": "Ensure rotation for customer created KMS CMKs is enabled.", "descriptiom": "Ensure rotation for customer created KMS CMKs is enabled.", "tool": "prowler", "service": "kms"}, {"id": "cloudwatch_log_metric_filter_unauthorized_api_calls", "title": "Ensure a log metric filter and alarm exist for unauthorized API calls.", "descriptiom": "Ensure a log metric filter and alarm exist for unauthorized API calls.", "tool": "prowler", "service": "cloudwatch"}, {"id": "cloudwatch_changes_to_network_route_tables_alarm_configured", "title": "Ensure a log metric filter and alarm exist for route table changes.", "descriptiom": "Ensure a log metric filter and alarm exist for route table changes.", "tool": "prowler", "service": "cloudwatch"}, {"id": "cloudwatch_changes_to_network_gateways_alarm_configured", "title": "Ensure a log metric filter and alarm exist for changes to network gateways.", "descriptiom": "Ensure a log metric filter and alarm exist for changes to network gateways.", "tool": "prowler", "service": "cloudwatch"}, {"id": "cloudwatch_log_metric_filter_for_s3_bucket_policy_changes", "title": "Ensure a log metric filter and alarm exist for S3 bucket policy changes.", "descriptiom": "Ensure a log metric filter and alarm exist for S3 bucket policy changes.", "tool": "prowler", "service": "cloudwatch"}, {"id": "cloudwatch_log_group_kms_encryption_enabled", "title": "Check if CloudWatch log groups are protected by AWS KMS.", "descriptiom": "Check if CloudWatch log groups are protected by AWS KMS.", "tool": "prowler", "service": "cloudwatch"}, {"id": "cloudwatch_log_metric_filter_and_alarm_for_cloudtrail_configuration_changes_enabled", "title": "Ensure a log metric filter and alarm exist for CloudTrail configuration changes.", "descriptiom": "Ensure a log metric filter and alarm exist for CloudTrail configuration changes.", "tool": "prowler", "service": "cloudwatch"}, {"id": "cloudwatch_cross_account_sharing_disabled", "title": "Check if CloudWatch has allowed cross-account sharing.", "descriptiom": "Check if CloudWatch has allowed cross-account sharing.", "tool": "prowler", "service": "cloudwatch"}, {"id": "cloudwatch_log_group_retention_policy_specific_days_enabled", "title": "Check if CloudWatch Log Groups have a retention policy of specific days.", "descriptiom": "Check if CloudWatch Log Groups have a retention policy of specific days.", "tool": "prowler", "service": "cloudwatch"}, {"id": "cloudwatch_changes_to_vpcs_alarm_configured", "title": "Ensure a log metric filter and alarm exist for VPC changes.", "descriptiom": "Ensure a log metric filter and alarm exist for VPC changes.", "tool": "prowler", "service": "cloudwatch"}, {"id": "cloudwatch_log_group_no_secrets_in_logs", "title": "Check if secrets exists in CloudWatch logs.", "descriptiom": "Check if secrets exists in CloudWatch logs", "tool": "prowler", "service": "cloudwatch"}, {"id": "cloudwatch_log_metric_filter_aws_organizations_changes", "title": "Ensure a log metric filter and alarm exist for AWS Organizations changes.", "descriptiom": "Ensure a log metric filter and alarm exist for AWS Organizations changes.", "tool": "prowler", "service": "cloudwatch"}, {"id": "cloudwatch_log_metric_filter_disable_or_scheduled_deletion_of_kms_cmk", "title": "Ensure a log metric filter and alarm exist for disabling or scheduled deletion of customer created KMS CMKs.", "descriptiom": "Ensure a log metric filter and alarm exist for disabling or scheduled deletion of customer created KMS CMKs.", "tool": "prowler", "service": "cloudwatch"}, {"id": "cloudwatch_log_metric_filter_authentication_failures", "title": "Ensure a log metric filter and alarm exist for AWS Management Console authentication failures.", "descriptiom": "Ensure a log metric filter and alarm exist for AWS Management Console authentication failures.", "tool": "prowler", "service": "cloudwatch"}, {"id": "cloudwatch_log_metric_filter_sign_in_without_mfa", "title": "Ensure a log metric filter and alarm exist for Management Console sign-in without MFA.", "descriptiom": "Ensure a log metric filter and alarm exist for Management Console sign-in without MFA.", "tool": "prowler", "service": "cloudwatch"}, {"id": "cloudwatch_log_metric_filter_security_group_changes", "title": "Ensure a log metric filter and alarm exist for security group changes.", "descriptiom": "Ensure a log metric filter and alarm exist for security group changes.", "tool": "prowler", "service": "cloudwatch"}, {"id": "cloudwatch_changes_to_network_acls_alarm_configured", "title": "Ensure a log metric filter and alarm exist for changes to Network Access Control Lists (NACL).", "descriptiom": "Ensure a log metric filter and alarm exist for changes to Network Access Control Lists (NACL).", "tool": "prowler", "service": "cloudwatch"}, {"id": "cloudwatch_log_metric_filter_root_usage", "title": "Ensure a log metric filter and alarm exist for usage of root account.", "descriptiom": "Ensure a log metric filter and alarm exist for usage of root account.", "tool": "prowler", "service": "cloudwatch"}, {"id": "cloudwatch_log_metric_filter_policy_changes", "title": "Ensure a log metric filter and alarm exist for IAM policy changes.", "descriptiom": "Ensure a log metric filter and alarm exist for IAM policy changes.", "tool": "prowler", "service": "cloudwatch"}, {"id": "cloudwatch_log_metric_filter_and_alarm_for_aws_config_configuration_changes_enabled", "title": "Ensure a log metric filter and alarm exist for AWS Config configuration changes.", "descriptiom": "Ensure a log metric filter and alarm exist for AWS Config configuration changes.", "tool": "prowler", "service": "cloudwatch"}, {"id": "glue_etl_jobs_amazon_s3_encryption_enabled", "title": "Check if Glue ETL Jobs have S3 encryption enabled.", "descriptiom": "Check if Glue ETL Jobs have S3 encryption enabled.", "tool": "prowler", "service": "glue"}, {"id": "glue_development_endpoints_s3_encryption_enabled", "title": "Check if Glue development endpoints have S3 encryption enabled.", "descriptiom": "Check if Glue development endpoints have S3 encryption enabled.", "tool": "prowler", "service": "glue"}, {"id": "glue_data_catalogs_metadata_encryption_enabled", "title": "Check if Glue data catalog settings have metadata encryption enabled.", "descriptiom": "Check if Glue data catalog settings have metadata encryption enabled.", "tool": "prowler", "service": "glue"}, {"id": "glue_data_catalogs_connection_passwords_encryption_enabled", "title": "Check if Glue data catalog settings have encrypt connection password enabled.", "descriptiom": "Check if Glue data catalog settings have encrypt connection password enabled.", "tool": "prowler", "service": "glue"}, {"id": "glue_development_endpoints_cloudwatch_logs_encryption_enabled", "title": "Check if Glue development endpoints have CloudWatch logs encryption enabled.", "descriptiom": "Check if Glue development endpoints have CloudWatch logs encryption enabled.", "tool": "prowler", "service": "glue"}, {"id": "glue_database_connections_ssl_enabled", "title": "Check if Glue database connection has SSL connection enabled.", "descriptiom": "Check if Glue database connection has SSL connection enabled.", "tool": "prowler", "service": "glue"}, {"id": "glue_etl_jobs_job_bookmark_encryption_enabled", "title": "Check if Glue ETL Jobs have Job bookmark encryption enabled.", "descriptiom": "Check if Glue ETL Jobs have Job bookmark encryption enabled.", "tool": "prowler", "service": "glue"}, {"id": "glue_development_endpoints_job_bookmark_encryption_enabled", "title": "Check if Glue development endpoints have Job bookmark encryption enabled.", "descriptiom": "Check if Glue development endpoints have Job bookmark encryption enabled.", "tool": "prowler", "service": "glue"}, {"id": "glue_etl_jobs_cloudwatch_logs_encryption_enabled", "title": "Check if Glue ETL Jobs have CloudWatch Logs encryption enabled.", "descriptiom": "Check if Glue ETL Jobs have CloudWatch Logs encryption enabled.", "tool": "prowler", "service": "glue"}, {"id": "s3_bucket_server_access_logging_enabled", "title": "Check if S3 buckets have server access logging enabled", "descriptiom": "Check if S3 buckets have server access logging enabled", "tool": "prowler", "service": "s3"}, {"id": "s3_bucket_object_versioning", "title": "Check if S3 buckets have object versioning enabled", "descriptiom": "Check if S3 buckets have object versioning enabled", "tool": "prowler", "service": "s3"}, {"id": "s3_bucket_kms_encryption", "title": "Check if S3 buckets have KMS encryption enabled.", "descriptiom": "Check if S3 buckets have KMS encryption enabled.", "tool": "prowler", "service": "s3"}, {"id": "s3_bucket_no_mfa_delete", "title": "Check if S3 bucket MFA Delete is not enabled.", "descriptiom": "Check if S3 bucket MFA Delete is not enabled.", "tool": "prowler", "service": "s3"}, {"id": "s3_bucket_public_write_acl", "title": "Ensure there are no S3 buckets writable by Everyone or Any AWS customer.", "descriptiom": "Ensure there are no S3 buckets writable by Everyone or Any AWS customer.", "tool": "prowler", "service": "s3"}, {"id": "s3_bucket_acl_prohibited", "title": "Check if S3 buckets have ACLs enabled", "descriptiom": "Check if S3 buckets have ACLs enabled", "tool": "prowler", "service": "s3"}, {"id": "s3_bucket_policy_public_write_access", "title": "Check if S3 buckets have policies which allow WRITE access.", "descriptiom": "Check if S3 buckets have policies which allow WRITE access.", "tool": "prowler", "service": "s3"}, {"id": "s3_bucket_public_access", "title": "Ensure there are no S3 buckets open to Everyone or Any AWS user.", "descriptiom": "Ensure there are no S3 buckets open to Everyone or Any AWS user.", "tool": "prowler", "service": "s3"}, {"id": "s3_bucket_public_list_acl", "title": "Ensure there are no S3 buckets listable by Everyone or Any AWS customer.", "descriptiom": "Ensure there are no S3 buckets listable by Everyone or Any AWS customer.", "tool": "prowler", "service": "s3"}, {"id": "s3_bucket_default_encryption", "title": "Check if S3 buckets have default encryption (SSE) enabled or use a bucket policy to enforce it.", "descriptiom": "Check if S3 buckets have default encryption (SSE) enabled or use a bucket policy to enforce it.", "tool": "prowler", "service": "s3"}, {"id": "s3_account_level_public_access_blocks", "title": "Check S3 Account Level Public Access Block.", "descriptiom": "Check S3 Account Level Public Access Block.", "tool": "prowler", "service": "s3"}, {"id": "s3_bucket_secure_transport_policy", "title": "Check if S3 buckets have secure transport policy.", "descriptiom": "Check if S3 buckets have secure transport policy.", "tool": "prowler", "service": "s3"}, {"id": "s3_bucket_level_public_access_block", "title": "Check S3 Bucket Level Public Access Block.", "descriptiom": "Check S3 Bucket Level Public Access Block.", "tool": "prowler", "service": "s3"}, {"id": "s3_bucket_object_lock", "title": "Check if S3 buckets have object lock enabled", "descriptiom": "Check if S3 buckets have object lock enabled", "tool": "prowler", "service": "s3"}, {"id": "emr_cluster_account_public_block_enabled", "title": "EMR Account Public Access Block enabled.", "descriptiom": "EMR Account Public Access Block enabled.", "tool": "prowler", "service": "emr"}, {"id": "emr_cluster_master_nodes_no_public_ip", "title": "EMR Cluster without Public IP.", "descriptiom": "EMR Cluster without Public IP.", "tool": "prowler", "service": "emr"}, {"id": "emr_cluster_publicly_accesible", "title": "Publicly accessible EMR Cluster.", "descriptiom": "Publicly accessible EMR Cluster.", "tool": "prowler", "service": "emr"}, {"id": "documentdb_instance_storage_encrypted", "title": "Check if DocumentDB instances storage is encrypted.", "descriptiom": "Check if DocumentDB instances storage is encrypted.", "tool": "prowler", "service": "documentdb"}, {"id": "sns_topics_kms_encryption_at_rest_enabled", "title": "Ensure there are no SNS Topics unencrypted", "descriptiom": "Ensure there are no SNS Topics unencrypted", "tool": "prowler", "service": "sns"}, {"id": "sns_topics_not_publicly_accessible", "title": "Check if SNS topics have policy set as Public", "descriptiom": "Check if SNS topics have policy set as Public", "tool": "prowler", "service": "sns"}, {"id": "macie_is_enabled", "title": "Check if Amazon Macie is enabled.", "descriptiom": "Check if Amazon Macie is enabled.", "tool": "prowler", "service": "macie"}, {"id": "inspector2_findings_exist", "title": "Check if Inspector2 findings exist", "descriptiom": "Check if Inspector2 findings exist", "tool": "prowler", "service": "inspector2"}, {"id": "config_recorder_all_regions_enabled", "title": "Ensure AWS Config is enabled in all regions.", "descriptiom": "Ensure AWS Config is enabled in all regions.", "tool": "prowler", "service": "config"}, {"id": "fms_policy_compliant", "title": "Ensure that all FMS policies inside an admin account are compliant", "descriptiom": "This check ensures all FMS policies inside an admin account are compliant", "tool": "prowler", "service": "fms"}, {"id": "ssmincidents_enabled_with_plans", "title": "Ensure SSM Incidents is enabled with response plans.", "descriptiom": "Ensure SSM Incidents is enabled with response plans.", "tool": "prowler", "service": "ssmincidents"}, {"id": "cloudfront_distributions_https_enabled", "title": "Check if CloudFront distributions are set to HTTPS.", "descriptiom": "Check if CloudFront distributions are set to HTTPS.", "tool": "prowler", "service": "cloudfront"}, {"id": "cloudfront_distributions_geo_restrictions_enabled", "title": "Check if Geo restrictions are enabled in CloudFront distributions.", "descriptiom": "Check if Geo restrictions are enabled in CloudFront distributions.", "tool": "prowler", "service": "cloudfront"}, {"id": "cloudfront_distributions_field_level_encryption_enabled", "title": "Check if CloudFront distributions have Field Level Encryption enabled.", "descriptiom": "Check if CloudFront distributions have Field Level Encryption enabled.", "tool": "prowler", "service": "cloudfront"}, {"id": "cloudfront_distributions_logging_enabled", "title": "Check if CloudFront distributions have logging enabled.", "descriptiom": "Check if CloudFront distributions have logging enabled.", "tool": "prowler", "service": "cloudfront"}, {"id": "cloudfront_distributions_using_deprecated_ssl_protocols", "title": "Check if CloudFront distributions are using deprecated SSL protocols.", "descriptiom": "Check if CloudFront distributions are using deprecated SSL protocols.", "tool": "prowler", "service": "cloudfront"}, {"id": "cloudfront_distributions_using_waf", "title": "Check if CloudFront distributions are using WAF.", "descriptiom": "Check if CloudFront distributions are using WAF.", "tool": "prowler", "service": "cloudfront"}, {"id": "wafv2_webacl_logging_enabled", "title": "Check if AWS WAFv2 WebACL logging is enabled", "descriptiom": "Check if AWS WAFv2 logging is enabled", "tool": "prowler", "service": "wafv2"}, {"id": "opensearch_service_domains_internal_user_database_enabled", "title": "Check if Amazon Elasticsearch/Opensearch Service domains have internal user database enabled", "descriptiom": "Check if Amazon Elasticsearch/Opensearch Service domains have internal user database enabled", "tool": "prowler", "service": "opensearch"}, {"id": "opensearch_service_domains_audit_logging_enabled", "title": "Check if Amazon Elasticsearch/Opensearch Service domains have audit logging enabled", "descriptiom": "Check if Amazon Elasticsearch/Opensearch Service domains have audit logging enabled", "tool": "prowler", "service": "opensearch"}, {"id": "opensearch_service_domains_encryption_at_rest_enabled", "title": "Check if Amazon Elasticsearch/Opensearch Service domains have encryption at-rest enabled", "descriptiom": "Check if Amazon Elasticsearch/Opensearch Service domains have encryption at-rest enabled", "tool": "prowler", "service": "opensearch"}, {"id": "opensearch_service_domains_cloudwatch_logging_enabled", "title": "Check if Amazon Elasticsearch/Opensearch Service domains have logging enabled", "descriptiom": "Check if Amazon Elasticsearch/Opensearch Service domains have logging enabled", "tool": "prowler", "service": "opensearch"}, {"id": "opensearch_service_domains_use_cognito_authentication_for_kibana", "title": "Check if Amazon Elasticsearch/Opensearch Service domains has Amazon Cognito authentication for Kibana enabled", "descriptiom": "Check if Amazon Elasticsearch/Opensearch Service domains has Amazon Cognito authentication for Kibana enabled", "tool": "prowler", "service": "opensearch"}, {"id": "opensearch_service_domains_https_communications_enforced", "title": "Check if Amazon Elasticsearch/Opensearch Service domains have enforce HTTPS enabled", "descriptiom": "Check if Amazon Elasticsearch/Opensearch Service domains have enforce HTTPS enabled", "tool": "prowler", "service": "opensearch"}, {"id": "opensearch_service_domains_updated_to_the_latest_service_software_version", "title": "Check if Amazon Elasticsearch/Opensearch Service domains have updates available", "descriptiom": "Check if Amazon Elasticsearch/Opensearch Service domains have updates available", "tool": "prowler", "service": "opensearch"}, {"id": "opensearch_service_domains_not_publicly_accessible", "title": "Check if Amazon Opensearch/Elasticsearch domains are set as Public or if it has open policy access", "descriptiom": "Check if Amazon Opensearch/Elasticsearch domains are set as Public or if it has open policy access", "tool": "prowler", "service": "opensearch"}, {"id": "opensearch_service_domains_node_to_node_encryption_enabled", "title": "Check if Amazon Elasticsearch/Opensearch Service domains have node-to-node encryption enabled", "descriptiom": "Check if Amazon Elasticsearch/Opensearch Service domains have node-to-node encryption enabled", "tool": "prowler", "service": "opensearch"}, {"id": "accessanalyzer_enabled_without_findings", "title": "Check if IAM Access Analyzer is enabled without findings", "descriptiom": "Check if IAM Access Analyzer is enabled without findings", "tool": "prowler", "service": "accessanalyzer"}, {"id": "accessanalyzer_enabled", "title": "Check if IAM Access Analyzer is enabled", "descriptiom": "Check if IAM Access Analyzer is enabled", "tool": "prowler", "service": "accessanalyzer"}, {"id": "glacier_vaults_policy_public_access", "title": "Check if S3 Glacier vaults have policies which allow access to everyone.", "descriptiom": "Ensure CodeArtifact internal packages do not allow external public source publishing.", "tool": "prowler", "service": "glacier"}, {"id": "neptune_cluster_uses_public_subnet", "title": "Ensure Neptune Cluster is not using a public subnet", "descriptiom": "Ensure Neptune Cluster is not using a public subnet", "tool": "prowler", "service": "neptune"}, {"id": "ecr_registry_scan_images_on_push_enabled", "title": "Check if ECR Registry has scan on push enabled", "descriptiom": "Check if ECR Registry has scan on push enabled", "tool": "prowler", "service": "ecr"}, {"id": "ecr_repositories_scan_images_on_push_enabled", "title": "[DEPRECATED] Check if ECR image scan on push is enabled", "descriptiom": "[DEPRECATED] Check if ECR image scan on push is enabled", "tool": "prowler", "service": "ecr"}, {"id": "ecr_repositories_lifecycle_policy_enabled", "title": "Check if ECR repositories have lifecycle policies enabled", "descriptiom": "Check if ECR repositories have lifecycle policies enabled", "tool": "prowler", "service": "ecr"}, {"id": "ecr_repositories_not_publicly_accessible", "title": "Ensure there are no ECR repositories set as Public", "descriptiom": "Ensure there are no ECR repositories set as Public", "tool": "prowler", "service": "ecr"}, {"id": "ecr_repositories_scan_vulnerabilities_in_latest_image", "title": "Check if ECR image scan found vulnerabilities in the newest image version", "descriptiom": "Check if ECR image scan found vulnerabilities in the newest image version", "tool": "prowler", "service": "ecr"}, {"id": "dynamodb_tables_pitr_enabled", "title": "Check if DynamoDB tables point-in-time recovery (PITR) is enabled.", "descriptiom": "Check if DynamoDB tables point-in-time recovery (PITR) is enabled.", "tool": "prowler", "service": "dynamodb"}, {"id": "dynamodb_accelerator_cluster_encryption_enabled", "title": "Check if DynamoDB DAX Clusters are encrypted at rest.", "descriptiom": "Check if DynamoDB DAX Clusters are encrypted at rest.", "tool": "prowler", "service": "dynamodb"}, {"id": "dynamodb_tables_kms_cmk_encryption_enabled", "title": "Check if DynamoDB table has encryption at rest enabled using CMK KMS.", "descriptiom": "Check if DynamoDB table has encryption at rest enabled using CMK KMS.", "tool": "prowler", "service": "dynamodb"}, {"id": "ecs_task_definitions_no_environment_secrets", "title": "Check if secrets exists in ECS task definitions environment variables", "descriptiom": "Check if secrets exists in ECS task definitions environment variables. If a secret is detected, the line number shown in the finding matches with the environment variable \"Name\" attribute starting to count at the \"environment\" key from the ECS Task Definition in JSON format.", "tool": "prowler", "service": "ecs"}, {"id": "directoryservice_directory_log_forwarding_enabled", "title": "Directory Service monitoring with CloudWatch logs.", "descriptiom": "Directory Service monitoring with CloudWatch logs.", "tool": "prowler", "service": "directoryservice"}, {"id": "directoryservice_supported_mfa_radius_enabled", "title": "Ensure Multi-Factor Authentication (MFA) using Radius Server is enabled in DS.", "descriptiom": "Ensure Multi-Factor Authentication (MFA) using Radius Server is enabled in DS.", "tool": "prowler", "service": "directoryservice"}, {"id": "directoryservice_directory_monitor_notifications", "title": "Directory Service has SNS Notifications enabled.", "descriptiom": "Directory Service has SNS Notifications enabled.", "tool": "prowler", "service": "directoryservice"}, {"id": "directoryservice_radius_server_security_protocol", "title": "Ensure Radius server in DS is using the recommended security protocol.", "descriptiom": "Ensure Radius server in DS is using the recommended security protocol.", "tool": "prowler", "service": "directoryservice"}, {"id": "directoryservice_directory_snapshots_limit", "title": "Directory Service Manual Snapshots limit reached.", "descriptiom": "Directory Service Manual Snapshots limit reached.", "tool": "prowler", "service": "directoryservice"}, {"id": "directoryservice_ldap_certificate_expiration", "title": "Directory Service LDAP Certificates expiration.", "descriptiom": "Directory Service Manual Snapshots limit reached.", "tool": "prowler", "service": "directoryservice"}, {"id": "workspaces_vpc_2private_1public_subnets_nat", "title": "Ensure that the Workspaces VPC are deployed following the best practices using 1 public subnet and 2 private subnets with a NAT Gateway attached", "descriptiom": "Ensure that the Workspaces VPC are deployed following the best practices using 1 public subnet and 2 private subnets with a NAT Gateway attached", "tool": "prowler", "service": "workspaces"}, {"id": "workspaces_volume_encryption_enabled", "title": "Ensure that your Amazon WorkSpaces storage volumes are encrypted in order to meet security and compliance requirements", "descriptiom": "Ensure that your Amazon WorkSpaces storage volumes are encrypted in order to meet security and compliance requirements", "tool": "prowler", "service": "workspaces"}, {"id": "elb_logging_enabled", "title": "Check if Elastic Load Balancers have logging enabled.", "descriptiom": "Check if Elastic Load Balancers have logging enabled.", "tool": "prowler", "service": "elb"}, {"id": "elb_insecure_ssl_ciphers", "title": "Check if Elastic Load Balancers have insecure SSL ciphers.", "descriptiom": "Check if Elastic Load Balancers have insecure SSL ciphers.", "tool": "prowler", "service": "elb"}, {"id": "elb_ssl_listeners", "title": "Check if Elastic Load Balancers have SSL listeners.", "descriptiom": "Check if Elastic Load Balancers have SSL listeners.", "tool": "prowler", "service": "elb"}, {"id": "elb_internet_facing", "title": "Check for internet facing Elastic Load Balancers.", "descriptiom": "Check for internet facing Elastic Load Balancers.", "tool": "prowler", "service": "elb"}, {"id": "sqs_queues_not_publicly_accessible", "title": "Check if SQS queues have policy set as Public", "descriptiom": "Check if SQS queues have policy set as Public", "tool": "prowler", "service": "sqs"}, {"id": "sqs_queues_server_side_encryption_enabled", "title": "Check if SQS queues have Server Side Encryption enabled", "descriptiom": "Check if SQS queues have Server Side Encryption enabled", "tool": "prowler", "service": "sqs"}, {"id": "wellarchitected_workload_no_high_or_medium_risks", "title": "Check for medium and high risks identified in workloads defined in the AWS Well-Architected Tool.", "descriptiom": "The Well-Architected Tool uses the AWS Well-Architected Framework to compare your cloud workloads against best practices across five architectural pillars: security, reliability, performance efficiency, operational excellence, and cost optimization", "tool": "prowler", "service": "wellarchitected"}, {"id": "redshift_cluster_audit_logging", "title": "Check if Redshift cluster has audit logging enabled", "descriptiom": "Check if Redshift cluster has audit logging enabled", "tool": "prowler", "service": "redshift"}, {"id": "redshift_cluster_public_access", "title": "Check for Publicly Accessible Redshift Clusters", "descriptiom": "Check for Publicly Accessible Redshift Clusters", "tool": "prowler", "service": "redshift"}, {"id": "redshift_cluster_automatic_upgrades", "title": "Check for Redshift Automatic Version Upgrade", "descriptiom": "Check for Redshift Automatic Version Upgrade", "tool": "prowler", "service": "redshift"}, {"id": "redshift_cluster_automated_snapshot", "title": "Check if Redshift Clusters have automated snapshots enabled", "descriptiom": "Check if Redshift Clusters have automated snapshots enabled", "tool": "prowler", "service": "redshift"}, {"id": "cloudtrail_insights_exist", "title": "Ensure CloudTrail Insight is enabled", "descriptiom": "Ensure CloudTrail Insight is enabled", "tool": "prowler", "service": "cloudtrail"}, {"id": "cloudtrail_bucket_requires_mfa_delete", "title": "Ensure the S3 bucket CloudTrail bucket requires MFA delete", "descriptiom": "Ensure the S3 bucket CloudTrail bucket requires MFA", "tool": "prowler", "service": "cloudtrail"}, {"id": "cloudtrail_logs_s3_bucket_access_logging_enabled", "title": "Ensure S3 bucket access logging is enabled on the CloudTrail S3 bucket", "descriptiom": "Ensure S3 bucket access logging is enabled on the CloudTrail S3 bucket", "tool": "prowler", "service": "cloudtrail"}, {"id": "cloudtrail_logs_s3_bucket_is_not_publicly_accessible", "title": "Ensure the S3 bucket CloudTrail logs is not publicly accessible", "descriptiom": "Ensure the S3 bucket CloudTrail logs to is not publicly accessible", "tool": "prowler", "service": "cloudtrail"}, {"id": "cloudtrail_multi_region_enabled_logging_management_events", "title": "Ensure CloudTrail logging management events in All Regions", "descriptiom": "Ensure CloudTrail logging management events in All Regions", "tool": "prowler", "service": "cloudtrail"}, {"id": "cloudtrail_s3_dataevents_read_enabled", "title": "Check if S3 buckets have Object-level logging for read events is enabled in CloudTrail.", "descriptiom": "Ensure that all your AWS CloudTrail trails are configured to log Data events in order to record S3 object-level API operations, such as GetObject, DeleteObject and PutObject, for individual S3 buckets or for all current and future S3 buckets provisioned in your AWS account.", "tool": "prowler", "service": "cloudtrail"}, {"id": "cloudtrail_log_file_validation_enabled", "title": "Ensure CloudTrail log file validation is enabled", "descriptiom": "Ensure CloudTrail log file validation is enabled", "tool": "prowler", "service": "cloudtrail"}, {"id": "cloudtrail_s3_dataevents_write_enabled", "title": "Check if S3 buckets have Object-level logging for write events is enabled in CloudTrail.", "descriptiom": "Ensure that all your AWS CloudTrail trails are configured to log Data events in order to record S3 object-level API operations, such as GetObject, DeleteObject and PutObject, for individual S3 buckets or for all current and future S3 buckets provisioned in your AWS account.", "tool": "prowler", "service": "cloudtrail"}, {"id": "cloudtrail_cloudwatch_logging_enabled", "title": "Ensure CloudTrail trails are integrated with CloudWatch Logs", "descriptiom": "Ensure CloudTrail trails are integrated with CloudWatch Logs", "tool": "prowler", "service": "cloudtrail"}, {"id": "cloudtrail_kms_encryption_enabled", "title": "Ensure CloudTrail logs are encrypted at rest using KMS CMKs", "descriptiom": "Ensure CloudTrail logs are encrypted at rest using KMS CMKs", "tool": "prowler", "service": "cloudtrail"}, {"id": "cloudtrail_multi_region_enabled", "title": "Ensure CloudTrail is enabled in all regions", "descriptiom": "Ensure CloudTrail is enabled in all regions", "tool": "prowler", "service": "cloudtrail"}, {"id": "awslambda_function_no_secrets_in_code", "title": "Find secrets in Lambda functions code.", "descriptiom": "Find secrets in Lambda functions code.", "tool": "prowler", "service": "awslambda"}, {"id": "awslambda_function_no_secrets_in_variables", "title": "Find secrets in Lambda functions variables.", "descriptiom": "Find secrets in Lambda functions variables.", "tool": "prowler", "service": "awslambda"}, {"id": "awslambda_function_invoke_api_operations_cloudtrail_logging_enabled", "title": "Check if Lambda functions invoke API operations are being recorded by CloudTrail.", "descriptiom": "Check if Lambda functions invoke API operations are being recorded by CloudTrail.", "tool": "prowler", "service": "awslambda"}, {"id": "awslambda_function_url_public", "title": "Check Public Lambda Function URL.", "descriptiom": "Check Public Lambda Function URL.", "tool": "prowler", "service": "awslambda"}, {"id": "awslambda_function_url_cors_policy", "title": "Check Lambda Function URL CORS configuration.", "descriptiom": "Check Lambda Function URL CORS configuration.", "tool": "prowler", "service": "awslambda"}, {"id": "awslambda_function_using_supported_runtimes", "title": "Find obsolete Lambda runtimes.", "descriptiom": "Find obsolete Lambda runtimes.", "tool": "prowler", "service": "awslambda"}, {"id": "awslambda_function_not_publicly_accessible", "title": "Check if Lambda functions have resource-based policy set as Public.", "descriptiom": "Check if Lambda functions have resource-based policy set as Public.", "tool": "prowler", "service": "awslambda"}, {"id": "resourceexplorer2_indexes_found", "title": "Resource Explorer Indexes Found", "descriptiom": "Resource Explorer Indexes Found", "tool": "prowler", "service": "resourceexplorer2"}, {"id": "iam_rotate_access_key_90_days", "title": "Ensure access keys are rotated every 90 days or less", "descriptiom": "Ensure access keys are rotated every 90 days or less", "tool": "prowler", "service": "iam"}, {"id": "iam_customer_unattached_policy_no_administrative_privileges", "title": "Ensure IAM policies that allow full \"*:*\" administrative privileges are not created", "descriptiom": "Ensure IAM policies that allow full \"*:*\" administrative privileges are not created, may be eventual consistent if an ephemeral resource is using it", "tool": "prowler", "service": "iam"}, {"id": "iam_root_hardware_mfa_enabled", "title": "Ensure only hardware MFA is enabled for the root account", "descriptiom": "Ensure only hardware MFA is enabled for the root account", "tool": "prowler", "service": "iam"}, {"id": "iam_user_no_setup_initial_access_key", "title": "Do not setup access keys during initial user setup for all IAM users that have a console password", "descriptiom": "Do not setup access keys during initial user setup for all IAM users that have a console password", "tool": "prowler", "service": "iam"}, {"id": "iam_no_expired_server_certificates_stored", "title": "Ensure that all the expired SSL/TLS certificates stored in AWS IAM are removed.", "descriptiom": "Ensure that all the expired SSL/TLS certificates stored in AWS IAM are removed.", "tool": "prowler", "service": "iam"}, {"id": "iam_root_mfa_enabled", "title": "Ensure MFA is enabled for the root account", "descriptiom": "Ensure MFA is enabled for the root account", "tool": "prowler", "service": "iam"}, {"id": "iam_user_with_temporary_credentials", "title": "Ensure users make use of temporary credentials assuming IAM roles", "descriptiom": "Ensure users make use of temporary credentials assuming IAM roles", "tool": "prowler", "service": "iam"}, {"id": "iam_support_role_created", "title": "Ensure a support role has been created to manage incidents with AWS Support", "descriptiom": "Ensure a support role has been created to manage incidents with AWS Support", "tool": "prowler", "service": "iam"}, {"id": "iam_user_hardware_mfa_enabled", "title": "Check if IAM users have Hardware MFA enabled.", "descriptiom": "Check if IAM users have Hardware MFA enabled.", "tool": "prowler", "service": "iam"}, {"id": "iam_inline_policy_no_administrative_privileges", "title": "Ensure inline policies that allow full \"*:*\" administrative privileges are not associated to IAM identities", "descriptiom": "Ensure inline policies that allow full \"*:*\" administrative privileges are not associated to IAM identities", "tool": "prowler", "service": "iam"}, {"id": "iam_aws_attached_policy_no_administrative_privileges", "title": "Ensure IAM AWS-Managed policies that allow full \"*:*\" administrative privileges are not attached", "descriptiom": "Ensure IAM AWS-Managed policies that allow full \"*:*\" administrative privileges are not attached", "tool": "prowler", "service": "iam"}, {"id": "iam_policy_allows_privilege_escalation", "title": "Ensure no Customer Managed IAM policies allow actions that may lead into Privilege Escalation", "descriptiom": "Ensure no Customer Managed IAM policies allow actions that may lead into Privilege Escalation", "tool": "prowler", "service": "iam"}, {"id": "iam_check_saml_providers_sts", "title": "Check if there are SAML Providers then STS can be used", "descriptiom": "Check if there are SAML Providers then STS can be used", "tool": "prowler", "service": "iam"}, {"id": "iam_policy_no_full_access_to_kms", "title": "Ensure IAM policies that allow full \"kms:*\" privileges are not created", "descriptiom": "Ensure IAM policies that allow full \"kms:*\" privileges are not created", "tool": "prowler", "service": "iam"}, {"id": "iam_password_policy_number", "title": "Ensure IAM password policy require at least one number", "descriptiom": "Ensure IAM password policy require at least one number", "tool": "prowler", "service": "iam"}, {"id": "iam_role_cross_service_confused_deputy_prevention", "title": "Ensure IAM Service Roles prevents against a cross-service confused deputy attack", "descriptiom": "Ensure IAM Service Roles prevents against a cross-service confused deputy attack", "tool": "prowler", "service": "iam"}, {"id": "iam_password_policy_minimum_length_14", "title": "Ensure IAM password policy requires minimum length of 14 or greater", "descriptiom": "Ensure IAM password policy requires minimum length of 14 or greater", "tool": "prowler", "service": "iam"}, {"id": "iam_avoid_root_usage", "title": "Avoid the use of the root accounts", "descriptiom": "Avoid the use of the root account", "tool": "prowler", "service": "iam"}, {"id": "iam_role_cross_account_readonlyaccess_policy", "title": "Ensure IAM Roles do not have ReadOnlyAccess access for external AWS accounts", "descriptiom": "Ensure IAM Roles do not have ReadOnlyAccess access for external AWS accounts", "tool": "prowler", "service": "iam"}, {"id": "iam_password_policy_expires_passwords_within_90_days_or_less", "title": "Ensure IAM password policy expires passwords within 90 days or less", "descriptiom": "Ensure IAM password policy expires passwords within 90 days or less", "tool": "prowler", "service": "iam"}, {"id": "iam_user_two_active_access_key", "title": "Check if IAM users have two active access keys", "descriptiom": "Check if IAM users have two active access keys", "tool": "prowler", "service": "iam"}, {"id": "iam_password_policy_symbol", "title": "Ensure IAM password policy require at least one symbol", "descriptiom": "Ensure IAM password policy require at least one symbol", "tool": "prowler", "service": "iam"}, {"id": "iam_user_accesskey_unused", "title": "Ensure User Access Keys unused are disabled", "descriptiom": "Ensure User Access Keys unused are disabled", "tool": "prowler", "service": "iam"}, {"id": "iam_securityaudit_role_created", "title": "Ensure a Security Audit role has been created to conduct security audits", "descriptiom": "Ensure a Security Audit role has been created to conduct security audits", "tool": "prowler", "service": "iam"}, {"id": "iam_no_custom_policy_permissive_role_assumption", "title": "Ensure that no custom IAM policies exist which allow permissive role assumption (e.g. sts:AssumeRole on *)", "descriptiom": "Ensure that no custom IAM policies exist which allow permissive role assumption (e.g. sts:AssumeRole on *)", "tool": "prowler", "service": "iam"}, {"id": "iam_password_policy_reuse_24", "title": "Ensure IAM password policy prevents password reuse: 24 or greater", "descriptiom": "Ensure IAM password policy prevents password reuse: 24 or greater", "tool": "prowler", "service": "iam"}, {"id": "iam_password_policy_lowercase", "title": "Ensure IAM password policy require at least one lowercase letter", "descriptiom": "Ensure IAM password policy requires at least one uppercase letter", "tool": "prowler", "service": "iam"}, {"id": "iam_no_root_access_key", "title": "Ensure no root account access key exists", "descriptiom": "Ensure no root account access key exists", "tool": "prowler", "service": "iam"}, {"id": "iam_customer_attached_policy_no_administrative_privileges", "title": "Ensure IAM Customer-Managed policies that allow full \"*:*\" administrative privileges are not attached", "descriptiom": "Ensure IAM Customer-Managed policies that allow full \"*:*\" administrative privileges are not attached", "tool": "prowler", "service": "iam"}, {"id": "iam_user_console_access_unused", "title": "Ensure unused user console access are disabled", "descriptiom": "Ensure unused user console access are disabled", "tool": "prowler", "service": "iam"}, {"id": "iam_policy_attached_only_to_group_or_roles", "title": "Ensure IAM policies are attached only to groups or roles", "descriptiom": "Ensure IAM policies are attached only to groups or roles", "tool": "prowler", "service": "iam"}, {"id": "iam_policy_no_full_access_to_cloudtrail", "title": "Ensure IAM policies that allow full \"cloudtrail:*\" privileges are not created", "descriptiom": "Ensure IAM policies that allow full \"cloudtrail:*\" privileges are not created", "tool": "prowler", "service": "iam"}, {"id": "iam_user_mfa_enabled_console_access", "title": "Ensure multi-factor authentication (MFA) is enabled for all IAM users that have a console password.", "descriptiom": "Ensure multi-factor authentication (MFA) is enabled for all IAM users that have a console password.", "tool": "prowler", "service": "iam"}, {"id": "iam_password_policy_uppercase", "title": "Ensure IAM password policy requires at least one uppercase letter", "descriptiom": "Ensure IAM password policy requires at least one uppercase letter", "tool": "prowler", "service": "iam"}, {"id": "iam_role_administratoraccess_policy", "title": "Ensure IAM Roles do not have AdministratorAccess policy attached", "descriptiom": "Ensure IAM Roles do not have AdministratorAccess policy attached", "tool": "prowler", "service": "iam"}, {"id": "iam_administrator_access_with_mfa", "title": "Ensure users of groups with AdministratorAccess policy have MFA tokens enabled", "descriptiom": "Ensure users of groups with AdministratorAccess policy have MFA tokens enabled", "tool": "prowler", "service": "iam"}, {"id": "networkfirewall_in_all_vpc", "title": "Ensure all VPCs have Network Firewall enabled", "descriptiom": "Ensure all VPCs have Network Firewall enabled", "tool": "prowler", "service": "networkfirewall"}, {"id": "eks_cluster_kms_cmk_encryption_in_secrets_enabled", "title": "Ensure Kubernetes Secrets are encrypted using Customer Master Keys (CMKs)", "descriptiom": "Ensure Kubernetes Secrets are encrypted using Customer Master Keys (CMKs)", "tool": "prowler", "service": "eks"}, {"id": "eks_control_plane_endpoint_access_restricted", "title": "Restrict Access to the EKS Control Plane Endpoint", "descriptiom": "Restrict Access to the EKS Control Plane Endpoint", "tool": "prowler", "service": "eks"}, {"id": "eks_endpoints_not_publicly_accessible", "title": "Ensure EKS Clusters are created with Private Endpoint Enabled and Public Access Disabled", "descriptiom": "Ensure EKS Clusters are created with Private Endpoint Enabled and Public Access Disabled", "tool": "prowler", "service": "eks"}, {"id": "eks_control_plane_logging_all_types_enabled", "title": "Ensure EKS Control Plane Audit Logging is enabled for all log types", "descriptiom": "Ensure EKS Control Plane Audit Logging is enabled for all log types", "tool": "prowler", "service": "eks"}, {"id": "apigatewayv2_api_access_logging_enabled", "title": "Ensure API Gateway V2 has Access Logging enabled.", "descriptiom": "Ensure API Gateway V2 has Access Logging enabled.", "tool": "prowler", "service": "apigatewayv2"}, {"id": "apigatewayv2_api_authorizers_enabled", "title": "Checks if API Gateway V2 has configured authorizers.", "descriptiom": "Checks if API Gateway V2 has configured authorizers.", "tool": "prowler", "service": "apigatewayv2"}, {"id": "drs_job_exist", "title": "Ensure DRS is enabled with jobs.", "descriptiom": "Ensure DRS is enabled with jobs.", "tool": "prowler", "service": "drs"}, {"id": "dlm_ebs_snapshot_lifecycle_policy_exists", "title": "Ensure EBS Snapshot lifecycle policies are defined.", "descriptiom": "Ensure EBS Snapshot lifecycle policies are defined.", "tool": "prowler", "service": "dlm"}, {"id": "vpc_peering_routing_tables_with_least_privilege", "title": "Ensure routing tables for VPC peering are least access.", "descriptiom": "Ensure routing tables for VPC peering are least access.", "tool": "prowler", "service": "vpc"}, {"id": "vpc_subnet_no_public_ip_by_default", "title": "Ensure VPC subnets do not assign public IP by default", "descriptiom": "Ensure VPC subnets do not assign public IP by default", "tool": "prowler", "service": "vpc"}, {"id": "vpc_subnet_different_az", "title": "Ensure all VPC has subnets in more than one availability zone", "descriptiom": "Ensure all VPC has subnets in more than one availability zone", "tool": "prowler", "service": "vpc"}, {"id": "vpc_endpoint_services_allowed_principals_trust_boundaries", "title": "Find trust boundaries in VPC endpoint services allowlisted principles.", "descriptiom": "Find trust boundaries in VPC endpoint services allowlisted principles.", "tool": "prowler", "service": "vpc"}, {"id": "vpc_endpoint_connections_trust_boundaries", "title": "Find trust boundaries in VPC endpoint connections.", "descriptiom": "Find trust boundaries in VPC endpoint connections.", "tool": "prowler", "service": "vpc"}, {"id": "vpc_flow_logs_enabled", "title": "Ensure VPC Flow Logging is Enabled in all VPCs.", "descriptiom": "Ensure VPC Flow Logging is Enabled in all VPCs.", "tool": "prowler", "service": "vpc"}, {"id": "vpc_different_regions", "title": "Ensure there are VPCs in more than one region", "descriptiom": "Ensure there are VPCs in more than one region", "tool": "prowler", "service": "vpc"}, {"id": "vpc_subnet_separate_private_public", "title": "Ensure all VPC has public and private subnets defined", "descriptiom": "Ensure all VPC has public and private subnets defined", "tool": "prowler", "service": "vpc"}, {"id": "codeartifact_packages_external_public_publishing_disabled", "title": "Ensure CodeArtifact internal packages do not allow external public source publishing.", "descriptiom": "Ensure CodeArtifact internal packages do not allow external public source publishing.", "tool": "prowler", "service": "codeartifact"}, {"id": "guardduty_no_high_severity_findings", "title": "There are High severity GuardDuty findings ", "descriptiom": "There are High severity GuardDuty findings ", "tool": "prowler", "service": "guardduty"}, {"id": "guardduty_is_enabled", "title": "Check if GuardDuty is enabled", "descriptiom": "Check if GuardDuty is enabled", "tool": "prowler", "service": "guardduty"}, {"id": "guardduty_centrally_managed", "title": "GuardDuty is centrally managed", "descriptiom": "GuardDuty is centrally managed", "tool": "prowler", "service": "guardduty"}, {"id": "trustedadvisor_premium_support_plan_subscribed", "title": "Check if a Premium support plan is subscribed", "descriptiom": "Check if a Premium support plan is subscribed.", "tool": "prowler", "service": "trustedadvisor"}, {"id": "trustedadvisor_errors_and_warnings", "title": "Check Trusted Advisor for errors and warnings.", "descriptiom": "Check Trusted Advisor for errors and warnings.", "tool": "prowler", "service": "trustedadvisor"}, {"id": "account_maintain_current_contact_details", "title": "Maintain current contact details.", "descriptiom": "Maintain current contact details.", "tool": "prowler", "service": "account"}, {"id": "account_maintain_different_contact_details_to_security_billing_and_operations", "title": "Maintain different contact details to security, billing and operations.", "descriptiom": "Maintain different contact details to security, billing and operations.", "tool": "prowler", "service": "account"}, {"id": "account_security_questions_are_registered_in_the_aws_account", "title": "Ensure security questions are registered in the AWS account.", "descriptiom": "Ensure security questions are registered in the AWS account.", "tool": "prowler", "service": "account"}, {"id": "account_security_contact_information_is_registered", "title": "Ensure security contact information is registered.", "descriptiom": "Ensure security contact information is registered.", "tool": "prowler", "service": "account"}, {"id": "autoscaling_group_multiple_az", "title": "EC2 Auto Scaling Group should use multiple Availability Zones", "descriptiom": "EC2 Auto Scaling Group should use multiple Availability Zones", "tool": "prowler", "service": "autoscaling"}, {"id": "autoscaling_find_secrets_ec2_launch_configuration", "title": "Find secrets in EC2 Auto Scaling Launch Configuration", "descriptiom": "Find secrets in EC2 Auto Scaling Launch Configuration", "tool": "prowler", "service": "autoscaling"}, {"id": "elbv2_waf_acl_attached", "title": "Check if Application Load Balancer has a WAF ACL attached.", "descriptiom": "Check if Application Load Balancer has a WAF ACL attached.", "tool": "prowler", "service": "elbv2"}, {"id": "elbv2_logging_enabled", "title": "Check if Elastic Load Balancers have logging enabled.", "descriptiom": "Check if Elastic Load Balancers have logging enabled.", "tool": "prowler", "service": "elbv2"}, {"id": "elbv2_desync_mitigation_mode", "title": "Check whether the Application Load Balancer is configured with strictest desync mitigation mode, if not check if at least is configured with the drop_invalid_header_fields attribute", "descriptiom": "Check whether the Application Load Balancer is configured with strictest desync mitigation mode, if not check if at least is configured with the drop_invalid_header_fields attribute", "tool": "prowler", "service": "elbv2"}, {"id": "elbv2_insecure_ssl_ciphers", "title": "Check if Elastic Load Balancers have insecure SSL ciphers.", "descriptiom": "Check if Elastic Load Balancers have insecure SSL ciphers.", "tool": "prowler", "service": "elbv2"}, {"id": "elbv2_internet_facing", "title": "Check for internet facing Elastic Load Balancers.", "descriptiom": "Check for internet facing Elastic Load Balancers.", "tool": "prowler", "service": "elbv2"}, {"id": "elbv2_ssl_listeners", "title": "Check if Elastic Load Balancers have SSL listeners.", "descriptiom": "Check if Elastic Load Balancers have SSL listeners.", "tool": "prowler", "service": "elbv2"}, {"id": "elbv2_deletion_protection", "title": "Check if Elastic Load Balancers have deletion protection enabled.", "descriptiom": "Check if Elastic Load Balancers have deletion protection enabled.", "tool": "prowler", "service": "elbv2"}, {"id": "elbv2_listeners_underneath", "title": "Check if ELBV2 has listeners underneath.", "descriptiom": "Check if ELBV2 has listeners underneath.", "tool": "prowler", "service": "elbv2"}, {"id": "securityhub_enabled", "title": "Check if Security Hub is enabled and its standard subscriptions.", "descriptiom": "Check if Security Hub is enabled and its standard subscriptions.", "tool": "prowler", "service": "securityhub"}, {"id": "backup_reportplans_exist", "title": "Ensure that there is at least one AWS Backup report plan", "descriptiom": "This check ensures that there is at least one backup report plan in place.", "tool": "prowler", "service": "backup"}, {"id": "backup_vaults_exist", "title": "Ensure AWS Backup vaults exist", "descriptiom": "This check ensures that AWS Backup vaults exist to provide a secure and durable storage location for backup data.", "tool": "prowler", "service": "backup"}, {"id": "backup_vaults_encrypted", "title": "Ensure that AWS Backup vaults are encrypted with AWS KMS", "descriptiom": "This check ensures that AWS Backup vaults are encrypted with AWS KMS.", "tool": "prowler", "service": "backup"}, {"id": "backup_plans_exist", "title": "Ensure that there is at least one AWS Backup plan", "descriptiom": "This check ensures that there is at least one backup plan in place.", "tool": "prowler", "service": "backup"}, {"id": "cloudformation_stack_outputs_find_secrets", "title": "Find secrets in CloudFormation outputs", "descriptiom": "Find secrets in CloudFormation outputs", "tool": "prowler", "service": "cloudformation"}, {"id": "cloudformation_stacks_termination_protection_enabled", "title": "Enable termination protection for Cloudformation Stacks", "descriptiom": "Enable termination protection for Cloudformation Stacks", "tool": "prowler", "service": "cloudformation"}, {"id": "elasticache_cluster_uses_public_subnet", "title": "Ensure Elasticache Cluster is not using a public subnet", "descriptiom": "Ensure Elasticache Cluster is not using a public subnet", "tool": "prowler", "service": "elasticache"}, {"id": "appstream_fleet_maximum_session_duration", "title": "Ensure user maximum session duration is no longer than 10 hours.", "descriptiom": "Ensure user maximum session duration is no longer than 10 hours.", "tool": "prowler", "service": "appstream"}, {"id": "appstream_fleet_default_internet_access_disabled", "title": "Ensure default Internet Access from your Amazon AppStream fleet streaming instances should remain unchecked.", "descriptiom": "Ensure default Internet Access from your Amazon AppStream fleet streaming instances should remain unchecked.", "tool": "prowler", "service": "appstream"}, {"id": "appstream_fleet_session_idle_disconnect_timeout", "title": "Ensure session idle disconnect timeout is set to 10 minutes or less.", "descriptiom": "Ensure session idle disconnect timeout is set to 10 minutes or less.", "tool": "prowler", "service": "appstream"}, {"id": "appstream_fleet_session_disconnect_timeout", "title": "Ensure session disconnect timeout is set to 5 minutes or less.", "descriptiom": "Ensure session disconnect timeout is set to 5 minutes or less", "tool": "prowler", "service": "appstream"}, {"id": "rds_instance_multi_az", "title": "Check if RDS instances have multi-AZ enabled.", "descriptiom": "Check if RDS instances have multi-AZ enabled.", "tool": "prowler", "service": "rds"}, {"id": "rds_instance_deprecated_engine_version", "title": "Check if RDS instance is using a supported engine version", "descriptiom": "Check if RDS is using a supported engine version for MariaDB, MySQL and PostgreSQL", "tool": "prowler", "service": "rds"}, {"id": "rds_instance_storage_encrypted", "title": "Check if RDS instances storage is encrypted.", "descriptiom": "Check if RDS instances storage is encrypted.", "tool": "prowler", "service": "rds"}, {"id": "rds_instance_enhanced_monitoring_enabled", "title": "Check if RDS instances has enhanced monitoring enabled.", "descriptiom": "Check if RDS instances has enhanced monitoring enabled.", "tool": "prowler", "service": "rds"}, {"id": "rds_instance_deletion_protection", "title": "Check if RDS instances have deletion protection enabled.", "descriptiom": "Check if RDS instances have deletion protection enabled.", "tool": "prowler", "service": "rds"}, {"id": "rds_snapshots_public_access", "title": "Check if RDS Snapshots and Cluster Snapshots are public.", "descriptiom": "Check if RDS Snapshots and Cluster Snapshots are public.", "tool": "prowler", "service": "rds"}, {"id": "rds_instance_no_public_access", "title": "Ensure there are no Public Accessible RDS instances.", "descriptiom": "Ensure there are no Public Accessible RDS instances.", "tool": "prowler", "service": "rds"}, {"id": "rds_instance_backup_enabled", "title": "Check if RDS instances have backup enabled.", "descriptiom": "Check if RDS instances have backup enabled.", "tool": "prowler", "service": "rds"}, {"id": "rds_instance_minor_version_upgrade_enabled", "title": "Ensure RDS instances have minor version upgrade enabled.", "descriptiom": "Ensure RDS instances have minor version upgrade enabled.", "tool": "prowler", "service": "rds"}, {"id": "rds_instance_integration_cloudwatch_logs", "title": "Check if RDS instances is integrated with CloudWatch Logs.", "descriptiom": "Check if RDS instances is integrated with CloudWatch Logs.", "tool": "prowler", "service": "rds"}, {"id": "rds_instance_transport_encrypted", "title": "Check if RDS instances client connections are encrypted (Microsoft SQL Server and PostgreSQL).", "descriptiom": "Check if RDS instances client connections are encrypted (Microsoft SQL Server and PostgreSQL).", "tool": "prowler", "service": "rds"}, {"id": "apigateway_restapi_public", "title": "Check if API Gateway endpoint is public or private.", "descriptiom": "Check if API Gateway endpoint is public or private.", "tool": "prowler", "service": "apigateway"}, {"id": "apigateway_restapi_waf_acl_attached", "title": "Check if API Gateway Stage has a WAF ACL attached.", "descriptiom": "Check if API Gateway Stage has a WAF ACL attached.", "tool": "prowler", "service": "apigateway"}, {"id": "apigateway_restapi_logging_enabled", "title": "Check if API Gateway Stage has logging enabled.", "descriptiom": "Check if API Gateway Stage has logging enabled.", "tool": "prowler", "service": "apigateway"}, {"id": "apigateway_restapi_client_certificate_enabled", "title": "Check if API Gateway Stage has client certificate enabled to access your backend endpoint.", "descriptiom": "Check if API Gateway Stage has client certificate enabled to access your backend endpoint.", "tool": "prowler", "service": "apigateway"}, {"id": "apigateway_restapi_authorizers_enabled", "title": "Check if API Gateway has configured authorizers.", "descriptiom": "Check if API Gateway has configured authorizers.", "tool": "prowler", "service": "apigateway"}, {"id": "apigateway_restapi_public_with_authorizer", "title": "Check if API Gateway public endpoint has an authorizer configured.", "descriptiom": "Check if API Gateway public endpoint has an authorizer configured.", "tool": "prowler", "service": "apigateway"}, {"id": "efs_not_publicly_accessible", "title": "Check if EFS have policies which allow access to everyone", "descriptiom": "Check if EFS have policies which allow access to everyone", "tool": "prowler", "service": "efs"}, {"id": "efs_encryption_at_rest_enabled", "title": "Check if EFS protects sensitive data with encryption at rest", "descriptiom": "Check if EFS protects sensitive data with encryption at rest", "tool": "prowler", "service": "efs"}, {"id": "efs_have_backup_enabled", "title": "Check if EFS File systems have backup enabled", "descriptiom": "Check if EFS File systems have backup enabled", "tool": "prowler", "service": "efs"}, {"id": "sagemaker_training_jobs_network_isolation_enabled", "title": "Check if Amazon SageMaker Training jobs have network isolation enabled", "descriptiom": "Check if Amazon SageMaker Training jobs have network isolation enabled", "tool": "prowler", "service": "sagemaker"}, {"id": "sagemaker_models_vpc_settings_configured", "title": "Check if Amazon SageMaker Models have VPC settings configured", "descriptiom": "Check if Amazon SageMaker Models have VPC settings configured", "tool": "prowler", "service": "sagemaker"}, {"id": "sagemaker_training_jobs_volume_and_output_encryption_enabled", "title": "Check if Amazon SageMaker Training jobs have volume and output with KMS encryption enabled", "descriptiom": "Check if Amazon SageMaker Training jobs have volume and output with KMS encryption enabled", "tool": "prowler", "service": "sagemaker"}, {"id": "sagemaker_training_jobs_vpc_settings_configured", "title": "Check if Amazon SageMaker Training job have VPC settings configured.", "descriptiom": "Check if Amazon SageMaker Training job have VPC settings configured.", "tool": "prowler", "service": "sagemaker"}, {"id": "sagemaker_notebook_instance_root_access_disabled", "title": "Check if Amazon SageMaker Notebook instances have root access disabled", "descriptiom": "Check if Amazon SageMaker Notebook instances have root access disabled", "tool": "prowler", "service": "sagemaker"}, {"id": "sagemaker_training_jobs_intercontainer_encryption_enabled", "title": "Check if Amazon SageMaker Training jobs have intercontainer encryption enabled", "descriptiom": "Check if Amazon SageMaker Training jobs have intercontainer encryption enabled", "tool": "prowler", "service": "sagemaker"}, {"id": "sagemaker_models_network_isolation_enabled", "title": "Check if Amazon SageMaker Models have network isolation enabled", "descriptiom": "Check if Amazon SageMaker Models have network isolation enabled", "tool": "prowler", "service": "sagemaker"}, {"id": "sagemaker_notebook_instance_without_direct_internet_access_configured", "title": "Check if Amazon SageMaker Notebook instances have direct internet access", "descriptiom": "Check if Amazon SageMaker Notebook instances have direct internet access", "tool": "prowler", "service": "sagemaker"}, {"id": "sagemaker_notebook_instance_encryption_enabled", "title": "Check if Amazon SageMaker Notebook instances have data encryption enabled", "descriptiom": "Check if Amazon SageMaker Notebook instances have data encryption enabled", "tool": "prowler", "service": "sagemaker"}, {"id": "sagemaker_notebook_instance_vpc_settings_configured", "title": "Check if Amazon SageMaker Notebook instances have VPC settings configured", "descriptiom": "Check if Amazon SageMaker Notebook instances have VPC settings configured", "tool": "prowler", "service": "sagemaker"}, {"id": "acm_certificates_expiration_check", "title": "Check if ACM Certificates are about to expire in specific days or less", "descriptiom": "Check if ACM Certificates are about to expire in specific days or less", "tool": "prowler", "service": "acm"}, {"id": "acm_certificates_transparency_logs_enabled", "title": "Check if ACM certificates have Certificate Transparency logging enabled", "descriptiom": "Check if ACM certificates have Certificate Transparency logging enabled", "tool": "prowler", "service": "acm"}, {"id": "athena_workgroup_enforce_configuration", "title": "Ensure that workgroup configuration is enforced so it cannot be overriden by client-side settings.", "descriptiom": "Ensure that workgroup configuration is enforced so it cannot be overriden by client-side settings.", "tool": "prowler", "service": "athena"}, {"id": "athena_workgroup_encryption", "title": "Ensure that encryption at rest is enabled for Amazon Athena query results stored in Amazon S3 in order to secure data and meet compliance requirements for data-at-rest encryption.", "descriptiom": "Ensure that encryption at rest is enabled for Amazon Athena query results stored in Amazon S3 in order to secure data and meet compliance requirements for data-at-rest encryption.", "tool": "prowler", "service": "athena"}, {"id": "route53_public_hosted_zones_cloudwatch_logging_enabled", "title": "Check if Route53 public hosted zones are logging queries to CloudWatch Logs.", "descriptiom": "Check if Route53 public hosted zones are logging queries to CloudWatch Logs.", "tool": "prowler", "service": "route53"}, {"id": "route53_domains_transferlock_enabled", "title": "Enable Transfer Lock for a Route53 Domain.", "descriptiom": "Enable Transfer Lock for a Route53 Domain.", "tool": "prowler", "service": "route53"}, {"id": "route53_domains_privacy_protection_enabled", "title": "Enable Privacy Protection for for a Route53 Domain.", "descriptiom": "Enable Privacy Protection for for a Route53 Domain.", "tool": "prowler", "service": "route53"}, {"id": "route53_dangling_ip_subdomain_takeover", "title": "Check if Route53 Records contains dangling IPs.", "descriptiom": "Check if Route53 Records contains dangling IPs.", "tool": "prowler", "service": "route53"}, {"id": "ec2_securitygroup_allow_ingress_from_internet_to_any_port", "title": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to any port.", "descriptiom": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to any port.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_instance_detailed_monitoring_enabled", "title": "Check if EC2 instances have detailed monitoring enabled.", "descriptiom": "Check if EC2 instances have detailed monitoring enabled.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_securitygroup_from_launch_wizard", "title": "Security Groups created by EC2 Launch Wizard.", "descriptiom": "Security Groups created by EC2 Launch Wizard.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_securitygroup_not_used", "title": "Ensure there are no Security Groups not being used.", "descriptiom": "Ensure there are no Security Groups not being used.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_elastic_ip_unassigned", "title": "Check if there is any unassigned Elastic IP.", "descriptiom": "Check if there is any unassigned Elastic IP.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_instance_secrets_user_data", "title": "Find secrets in EC2 User Data.", "descriptiom": "Find secrets in EC2 User Data.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_cassandra_7199_9160_8888", "title": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to Cassandra ports 7199 or 9160 or 8888.", "descriptiom": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to Cassandra ports 7199 or 9160 or 8888.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_securitygroup_default_restrict_traffic", "title": "Ensure the default security group of every VPC restricts all traffic.", "descriptiom": "Ensure the default security group of every VPC restricts all traffic.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_oracle_1521_2483", "title": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to Oracle ports 1521 or 2483.", "descriptiom": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to Oracle ports 1521 or 2483.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_kafka_9092", "title": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to Kafka port 9092.", "descriptiom": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to Kafka port 9092.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_securitygroup_allow_ingress_from_internet_to_port_mongodb_27017_27018", "title": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to MongoDB ports 27017 and 27018.", "descriptiom": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to MongoDB ports 27017 and 27018.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_postgres_5432", "title": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to Postgres port 5432.", "descriptiom": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to Postgres port 5432.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_elastic_ip_shodan", "title": "Check if any of the Elastic or Public IP are in Shodan (requires Shodan API KEY).", "descriptiom": "Check if any of the Elastic or Public IP are in Shodan (requires Shodan API KEY).", "tool": "prowler", "service": "ec2"}, {"id": "ec2_instance_internet_facing_with_instance_profile", "title": "Check for internet facing EC2 instances with Instance Profiles attached.", "descriptiom": "Check for internet facing EC2 instances with Instance Profiles attached.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_redis_6379", "title": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to Redis port 6379.", "descriptiom": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to Redis port 6379.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_securitygroup_allow_wide_open_public_ipv4", "title": "Ensure no security groups allow ingress from wide-open non-RFC1918 address.", "descriptiom": "Ensure no security groups allow ingress from wide-open non-RFC1918 address.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_telnet_23", "title": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to Telnet port 23.", "descriptiom": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to Telnet port 23.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_sql_server_1433_1434", "title": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to Windows SQL Server ports 1433 or 1434.", "descriptiom": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to Windows SQL Server ports 1433 or 1434.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_instance_managed_by_ssm", "title": "Check if EC2 instances are managed by Systems Manager.", "descriptiom": "Check if EC2 instances are managed by Systems Manager.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_networkacl_allow_ingress_any_port", "title": "Ensure no Network ACLs allow ingress from 0.0.0.0/0 to any port.", "descriptiom": "Ensure no Network ACLs allow ingress from 0.0.0.0/0 to any port.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_mysql_3306", "title": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to MySQL port 3306.", "descriptiom": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to MySQL port 3306.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_ebs_public_snapshot", "title": "Ensure there are no EBS Snapshots set as Public.", "descriptiom": "Ensure there are no EBS Snapshots set as Public.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_ebs_default_encryption", "title": "Check if EBS Default Encryption is activated.", "descriptiom": "Check if EBS Default Encryption is activated.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_networkacl_allow_ingress_tcp_port_3389", "title": "Ensure no Network ACLs allow ingress from 0.0.0.0/0 to Microsoft RDP port 3389", "descriptiom": "Ensure no Network ACLs allow ingress from 0.0.0.0/0 to Microsoft RDP port 3389", "tool": "prowler", "service": "ec2"}, {"id": "ec2_ebs_volume_snapshots_exists", "title": "Check if EBS snapshots exists.", "descriptiom": "Check if EBS snapshots exists.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_securitygroup_allow_ingress_from_internet_to_tcp_ftp_port_20_21", "title": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to FTP ports 20 or 21.", "descriptiom": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to FTP ports 20 or 21.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_securitygroup_with_many_ingress_egress_rules", "title": "Find security groups with more than 50 ingress or egress rules.", "descriptiom": "Find security groups with more than 50 ingress or egress rules.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_ebs_snapshots_encrypted", "title": "Check if EBS snapshots are encrypted.", "descriptiom": "Check if EBS snapshots are encrypted.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_ami_public", "title": "Ensure there are no EC2 AMIs set as Public.", "descriptiom": "Ensure there are no EC2 AMIs set as Public.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_instance_older_than_specific_days", "title": "Check EC2 Instances older than specific days.", "descriptiom": "Check EC2 Instances older than specific days.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_elasticsearch_kibana_9200_9300_5601", "title": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to Elasticsearch/Kibana ports.", "descriptiom": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to Elasticsearch/Kibana ports.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_instance_imdsv2_enabled", "title": "Check if EC2 Instance Metadata Service Version 2 (IMDSv2) is Enabled and Required.", "descriptiom": "Check if EC2 Instance Metadata Service Version 2 (IMDSv2) is Enabled and Required.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_ebs_volume_encryption", "title": "Ensure there are no EBS Volumes unencrypted.", "descriptiom": "Ensure there are no EBS Volumes unencrypted.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_22", "title": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to SSH port 22.", "descriptiom": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to SSH port 22.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_3389", "title": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to port 3389.", "descriptiom": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to port 3389.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_instance_profile_attached", "title": "Ensure IAM instance roles are used for AWS resource access from instances", "descriptiom": "Ensure IAM instance roles are used for AWS resource access from instances.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_securitygroup_allow_ingress_from_internet_to_tcp_port_memcached_11211", "title": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to Memcached port 11211.", "descriptiom": "Ensure no security groups allow ingress from 0.0.0.0/0 or ::/0 to Memcached port 11211.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_instance_public_ip", "title": "Check for EC2 Instances with Public IP.", "descriptiom": "Check for EC2 Instances with Public IP.", "tool": "prowler", "service": "ec2"}, {"id": "ec2_networkacl_allow_ingress_tcp_port_22", "title": "Ensure no Network ACLs allow ingress from 0.0.0.0/0 to SSH port 22", "descriptiom": "Ensure no Network ACLs allow ingress from 0.0.0.0/0 to SSH port 22", "tool": "prowler", "service": "ec2"}, {"id": "cloudtrail_not_configured", "title": "CloudTrail Service Not Configured", "descriptiom": "CloudTrail is not configured, which means that API activity is not logged.", "tool": "scout", "service": "cloudtrail"}, {"id": "acm_certificate_with_transparency_logging_disabled", "title": "ACM Certificate with Transparency Logging Set to Disabled", "descriptiom": "Disabling Transparency Logging may result in browsers not trusting your certificate. As of April 30 2018, Google Chrome no longer trusts public SSL/TLS certificates that are not recorded in a certificate transparency log. Transparency Logging should be enabled as a best practice.", "tool": "scout", "service": "acm"}, {"id": "iam_password_policy_minimum_length", "title": "Minimum Password Length Too Short", "descriptiom": "The password policy did not enforce a minimum of _ARG_0_ characters. As a result, password complexity requirements were not in line with security best practice.", "tool": "scout", "service": "iam"}, {"id": "cloudtrail_partial_data_logging", "title": "Data Logging Configuration Not Covering All Resources", "descriptiom": "CloudTrail Data Logging is not configured to cover all S3 or Lambda resources, which means that all S3 access and Lambda invocations are not logged. <br><br>Note: S3 bucket logging can be used in place of CloudTrail data events for S3. If that is the case, logs for Lambda invocations may still be missing.", "tool": "scout", "service": "cloudtrail"}, {"id": "elbv2_no_access_logs", "title": "Lack of ELBv2 Access Logs", "descriptiom": "Elastic Load Balancing provides access logs that capture detailed information about requests sent to your load balancer. Each log contains information such as the time the request was received, the client's IP address, latencies, request paths, and server responses. You can use these access logs to analyze traffic patterns and identify security issues.<br><br>Note that for Network Load Balancers, access logs are created only if the load balancer has a TLS listener.", "tool": "scout", "service": "elbv2"}, {"id": "logs_no_alarm_cmk_deletion", "title": "No CloudWatch Alarm for \"Disabled or Deleted Master Keys\"", "descriptiom": "There was no CloudWatch alarm to alert about disabled or deleted master keys. Monitoring for disabled or deleted master keys can prevent permanent loss of data encrypted with such keys.", "tool": "scout", "service": "logs"}, {"id": "cloudtrail_no_cloudwatch_integration", "title": "Trail Is Not Integrated with CloudWatch", "descriptiom": "The lack of integration with CloudWatch hinders real-time and historic activity logging as well as not allowing the configuration of alarms and notifications for anomalous account activity.", "tool": "scout", "service": "cloudtrail"}, {"id": "elb_listener_allowing_cleartext", "title": "Load Balancer Allowing Clear Text (HTTP) Communication", "descriptiom": "Use of a secure protocol (HTTPS or SSL) is best practice for encrypted communication. A load balancer without a listener using an encrypted protocol can be vulnerable to eavesdropping and man-in-the-middle attacks.", "tool": "scout", "service": "elb"}, {"id": "iam_user_with_multiple_access_keys", "title": "User with Multiple API Keys", "descriptiom": "The user was configured to have more than one active API keys associated with the account. Redundant or unused API keys should be removed.", "tool": "scout", "service": "iam"}, {"id": "ec2_security_group_opens_known_port_to_all", "title": "Security Group Opens _ARG_0_ Port to All", "descriptiom": "The security group was found to be exposing a well-known port to all source addresses. Well-known ports are commonly probed by automated scanning tools, and could be an indicator of sensitive services exposed to Internet. If such services need to be exposed, a restriction on the source address could help to reduce the attack surface of the infrastructure.", "tool": "scout", "service": "ec2"}, {"id": "rds_snapshot_public", "title": "Publicly Accessible Snapshot", "descriptiom": "Snapshots should never be public, as this risks exposing sensitive data.", "tool": "scout", "service": "rds"}, {"id": "cloudfront_distribution_insecure_origin", "title": "Content Distribution with Insecure Origin TLS Policy", "descriptiom": "Distributing content between AWS CloudFront distributions and their custom origins over HTTPS using older SSL/TLS protocols can potentially expose sensitive data.", "tool": "scout", "service": "cloudfront"}, {"id": "ec2_instance_type", "title": "Use of _ARG_0_ Instances", "descriptiom": "Policies dictate EC2 instances of type _ARG_0_ should not be used in this environment", "tool": "scout", "service": "ec2"}, {"id": "iam_ec2_role_without_instances", "title": "Unused Role for EC2 Service", "descriptiom": "An EC2 role is defined which is unused and may not be required. This being the case, its existence in the configuration increases the risk that it may be inappropriately assigned. The unused role should be reviewed and removed if no longer required.", "tool": "scout", "service": "iam"}, {"id": "sqs_queue_server_side_encryption_disabled", "title": "Queue with Encryption Disabled", "descriptiom": "SQS Server-Side Encryption ensures that the contents of messages in queues are encrypted.", "tool": "scout", "service": "sqs"}, {"id": "cloudformation_stack_with_role", "title": "Role Passed to Stack", "descriptiom": "Passing a role to CloudFormation stacks may result in privilege escalation because IAM users with privileges within the CloudFormation scope implicitly inherit the stack's role's permissions. Consequently, it should be ensured that the IAM privileges assigned to the stack's role follow the principle of least privilege.", "tool": "scout", "service": "cloudformation"}, {"id": "ec2_ebs_volume_not_encrypted", "title": "EBS Volume Not Encrypted", "descriptiom": "Enabling encryption of EBS volumes ensures that data is encrypted both at-rest and in-transit (between an instance and its attached EBS storage).", "tool": "scout", "service": "ec2"}, {"id": "s3_bucket_world_policy_star", "title": "All Actions Authorized to All Principals", "descriptiom": "Allowing IAM actions to all principals is contrary to the principle of least privilege and presents an opportunity for abuse. This policy should be reviewed to ensure it is secure and in line with the resource's intended use.", "tool": "scout", "service": "s3"}, {"id": "ses_identity_dkim_not_verified", "title": "DKIM Not Verified", "descriptiom": "Amazon SES has not verified the DKIM DNS records (tokens) published in the domain name's DNS.", "tool": "scout", "service": "ses"}, {"id": "vpc_custom_network_acls_allow_all", "title": "Network ACLs Allow All _ARG_0_ Traffic (custom)", "descriptiom": "Network ACLs are designed to provide a secondary layer of security. Adding a rule that allows all network traffic (all protocols, IPs, and _ARG_1_) prior to any deny rule defeats the purpose of network ACLs.", "tool": "scout", "service": "vpc"}, {"id": "logs_no_alarm_route_table_changes", "title": "No CloudWatch Alarm for \"Route Table Changes\"", "descriptiom": "There was no CloudWatch alarm to monitor changes in route tables. Monitoring for route table changes will help ensure that all VPC traffic flows thorough an expected path.", "tool": "scout", "service": "logs"}, {"id": "route53_domain_no_transferlock", "title": "Domain Transfer Not Locked", "descriptiom": "A domain lock prevents someone from transferring your domain to another registrar without your permission.", "tool": "scout", "service": "route53"}, {"id": "redshift_cluster_publicly_accessible", "title": "Cluster Publicly Accessible", "descriptiom": "Redshift clusters should never be public, as this increases the risk of exposing sensitive data. Public accessibility means that other AWS users can access your cluster and the data stored in it.", "tool": "scout", "service": "redshift"}, {"id": "ec2_default_security_group_in_use", "title": "Default Security Groups in Use", "descriptiom": "The use of default security groups can indicate a lack of intentional enforcement of the principle of least privilege. Use custom security groups to ensure you are properly minimizing privilege and access.", "tool": "scout", "service": "ec2"}, {"id": "iam_managed_policy_allows_full_privileges", "title": "Managed Policy Allows All Actions", "descriptiom": "Providing full privileges instead of restricting to the minimum set of permissions that the principal requires exposes the resources to potentially unwanted actions.", "tool": "scout", "service": "iam"}, {"id": "iam_human_user_with_policies", "title": "Human User with _ARG_1_ Policies", "descriptiom": "This configuration goes against organizational policies.", "tool": "scout", "service": "iam"}, {"id": "cloudfront_distribution_cleartext_origin", "title": "Content Distribution with Clear-Text Origin TLS Policy", "descriptiom": "Distributing content between AWS CloudFront distributions and their custom origins over clear-text HTTP, without using AWS encryption solutions, can potentially expose sensitive data.", "tool": "scout", "service": "cloudfront"}, {"id": "logs_no_alarm_aws_configuration_changes", "title": "No CloudWatch Alarm for \"AWS Configuration Changes\"", "descriptiom": "There was no CloudWatch alarm to monitor AWS configuration changes. Monitoring for AWS configuration changes will help ensure sustained visibility to changes performed in the AWS account.", "tool": "scout", "service": "logs"}, {"id": "vpc_network_acl_not_used", "title": "Unused Network ACLs", "descriptiom": "Maintaining unused resources increases risks of misconfigurations and increases the difficulty of audits.", "tool": "scout", "service": "vpc"}, {"id": "ec2_security_group_whitelists_unknown_cidrs", "title": "Security Group Whitelists Unknown CIDRs", "descriptiom": "This configuration goes against organizational policies.", "tool": "scout", "service": "ec2"}, {"id": "ec2_unused_security_group", "title": "Unused Security Group", "descriptiom": " Non-default security groups were defined which were unused and may not be required. This being the case, their existence in the configuration increases the risk that they may be inappropriately assigned. The unused security groups should be reviewed and removed if no longer required.", "tool": "scout", "service": "ec2"}, {"id": "elbv2_older_ssl_policy", "title": "Older SSL/TLS Policy", "descriptiom": "Use of the latest TLS policies is best practice. The recommended predefined security policies are:<ul><li>ELBSecurityPolicy-2016-08</li><li>ELBSecurityPolicy-FS-2018-06</li><li>ELBSecurityPolicy-TLS-1-1-2017-01</li><li>ELBSecurityPolicy-TLS-1-2-2017-01</li><li>ELBSecurityPolicy-TLS-1-2-Ext-2018-06</li><li>ELBSecurityPolicy-FS-1-1-2019-08</li><li>ELBSecurityPolicy-FS-1-2-2019-08</li><li>ELBSecurityPolicy-FS-1-2-Res-2019-08</li><li>ELBSecurityPolicy-FS-1-2-Res-2020-10</li></ul>", "tool": "scout", "service": "elbv2"}, {"id": "iam_root_account_no_mfa", "title": "Root Account without MFA", "descriptiom": "The root account is the most privileged user in an account. MFA adds an extra layer of protection on top of a user name and password. With MFA enabled, when a user signs in to an AWS website, they're prompted for their user name and password and for an authentication code from their AWS MFA device.", "tool": "scout", "service": "iam"}, {"id": "redshift_parameter_group_logging_disabled", "title": "User Activity Logging Disabled", "descriptiom": "Audit logging is not enabled by default in Amazon Redshift. A lack of user activity logging could impede the ability to investigate issues involving misuse, malicious access or performance.<br><br><b>Note</b> that this rule will only flag non-default parameter groups, as default parameter groups cannot be modified. It is recommended to use custom groups and configure them according to security best practice.", "tool": "scout", "service": "redshift"}, {"id": "vpc_default_network_acls_allow_all", "title": "Network ACLs Allow All _ARG_0_ Traffic (default)", "descriptiom": "Network ACLs are designed to provide a secondary layer of security. Adding a rule that allows all network traffic (all protocols, IPs, and _ARG_1_) prior to any deny rule defeats the purpose of network ACLs.", "tool": "scout", "service": "vpc"}, {"id": "iam_root_account_no_hardware_mfa", "title": "Root Account without Hardware MFA", "descriptiom": "The root account is the most privileged user in an account. MFA adds an extra layer of protection on top of a user name and password. With MFA enabled, when a user signs in to an AWS website, they're prompted for their user name and password and for an authentication code from their AWS MFA device.", "tool": "scout", "service": "iam"}, {"id": "logs_no_alarm_cloudtrail_configuration_changes", "title": "No CloudWatch Alarm for \"CloudTrail Configuration Changes\"", "descriptiom": "There was no CloudWatch alarm to monitor CloudTrail configuration changes. Monitoring for CloudTrail policy changes will help ensure sustained visibility to activities performed in the AWS account.", "tool": "scout", "service": "logs"}, {"id": "s3_bucket_no_logging", "title": "Bucket Access Logging Disabled", "descriptiom": "Server access logging provides detailed records of the requests that are made to a bucket. Server access logs can assist you in security and access audits, help you learn about your customer base, and understand your Amazon S3 bill. <br><br>Note: CloudTrail data events can be used in place of S3 bucket logging. If that is the case, this finding can be considered a false positive.", "tool": "scout", "service": "s3"}, {"id": "cloudtrail_no_log_file_validation", "title": "Log File Validation Is Disabled", "descriptiom": "The lack of log file validation prevents from verifying the integrity of CloudTrail log files.", "tool": "scout", "service": "cloudtrail"}, {"id": "iam_managed_policy_no_attachments", "title": "Managed Policy Not Attached to Any Entity", "descriptiom": "Customer Managed policies should be reviewed and deleted if not necessary.", "tool": "scout", "service": "iam"}, {"id": "cloudtrail_no_logging", "title": "Disabled Trails", "descriptiom": "Logging is disabled for a given Trail. Depending on the configuration, logs for important API activity may be missing.", "tool": "scout", "service": "cloudtrail"}, {"id": "elb_older_ssl_policy", "title": "Older SSL/TLS Policy", "descriptiom": "Use of the latest TLS policies is best practice. The recommended predefined security policies are:<ul><li>ELBSecurityPolicy-2016-08</li><li>ELBSecurityPolicy-FS-2018-06</li><li>ELBSecurityPolicy-TLS-1-1-2017-01</li><li>ELBSecurityPolicy-TLS-1-2-2017-01</li><li>ELBSecurityPolicy-TLS-1-2-Ext-2018-06</li><li>ELBSecurityPolicy-FS-1-1-2019-08</li><li>ELBSecurityPolicy-FS-1-2-2019-08</li><li>ELBSecurityPolicy-FS-1-2-Res-2019-08</li><li>ELBSecurityPolicy-FS-1-2-Res-2020-10</li></ul>", "tool": "scout", "service": "elb"}, {"id": "s3_bucket_world_acl", "title": "_ARG_2_", "descriptiom": "An S3 bucket has been found that was accessible for _ARG_0_. If sensitive information is stored in this bucket, it could be at risk of being accessed by potential attackers.", "tool": "scout", "service": "s3"}, {"id": "logs_no_alarm_signin_without_mfa", "title": "No CloudWatch Alarm for \"Console Logins without MFA\"", "descriptiom": "There was no CloudWatch alarm for console log ins without MFA. Monitoring for console log ins without MFA will provide visibility into the use of accounts not protected by Multi Factor Authentication (MFA).", "tool": "scout", "service": "logs"}, {"id": "ec2_security_group_whitelists_aws", "title": "Security Group Whitelists AWS CIDRs", "descriptiom": "The AWS IP ranges contain addresses which can be assigned to EC2 instances in any AWS account, as well as services which can be used to interact with any AWS account. Consequently, allowing these ranges potentially exposes your AWS account to external interactions.", "tool": "scout", "service": "ec2"}, {"id": "iam_root_account_with_active_keys", "title": "Root Account Has Active Keys", "descriptiom": "AWS root account access keys should be deleted as they provide unrestricted access to the AWS Account.", "tool": "scout", "service": "iam"}, {"id": "ec2_security_group_opens_port_to_all", "title": "Security Group Opens _ARG_0_ Port to All", "descriptiom": "The security group was found to be exposing a port to all source addresses. Ports are commonly probed by automated scanning tools, and could be an indicator of sensitive services exposed to Internet. If such services need to be exposed, a restriction on the source address could help to reduce the attack surface of the infrastructure.", "tool": "scout", "service": "ec2"}, {"id": "iam_service_user_with_password", "title": "Service User with Password Enabled", "descriptiom": "A user meant to be used for a service or application not hosted in AWS was found to have password authentication enabled. This goes against security best practice, which recommends that these types of users should only have API authentication enabled, to minimize the likeliness of account compromise.", "tool": "scout", "service": "iam"}, {"id": "redshift_cluster_database_not_encrypted", "title": "Cluster Database Encryption Disabled", "descriptiom": "Data-at-rest should be encrypted.", "tool": "scout", "service": "redshift"}, {"id": "route53_domain_no_autorenew", "title": "Automatic Renewal Not Set for Domain", "descriptiom": "Enable automatic renewal to remove the risk of losing control over your domain names.", "tool": "scout", "service": "route53"}, {"id": "iam_inline_policy_for_role", "title": "Inline _ARG_0_ Policy Allows \"_ARG_1_:_ARG_2_\" For All Resources", "descriptiom": "Using \"*\" for the resource field might grant permissions to more resources than necessary, potentially introducing privilege escalation scenarios.", "tool": "scout", "service": "iam"}, {"id": "cloudtrail_no_global_services_logging", "title": "Global Service Logging Disabled", "descriptiom": "API activity for global services such as IAM and STS is not logged. Investigation of incidents will be incomplete due to the lack of information.", "tool": "scout", "service": "cloudtrail"}, {"id": "rds_security_group_allows_all", "title": "Security Group Allows All IP Addresses", "descriptiom": "The security group allows access to RDS instances from any source address, which creates a wider attack surface for resources assigned to it. Source address restrictions should be implemented", "tool": "scout", "service": "rds"}, {"id": "iam_managed_policy_allows_non_sts_action", "title": "Managed Policy Allows Non STS Action", "descriptiom": "When the principle of least privilege is implemented by exclusively using roles for privilege management, users should only be granted permissions to assume roles. This policy may violate that organizational standard.", "tool": "scout", "service": "iam"}, {"id": "iam_password_policy_no_symbol_required", "title": "Password Policy Lacks Symbol Requirement", "descriptiom": "The password policy did not require the use of at least one special character. As a result, password complexity requirements were not in line with security best practice.", "tool": "scout", "service": "iam"}, {"id": "logs_no_alarm_nacl_changes", "title": "No CloudWatch Alarm for \"Network Access Control Lists Changes\"", "descriptiom": "There was no CloudWatch alarm to detect changes to NACL. Monitoring for NACL changes will help ensure that no service or resource is unintentionally exposed.", "tool": "scout", "service": "logs"}, {"id": "iam_assume_role_lacks_external_id_and_mfa", "title": "Cross-Account AssumeRole Policy Lacks External ID and MFA", "descriptiom": "When authorizing cross-account role assumption, either an External ID or MFA should be required. If the role is intended for use by a service, an External ID can prevent \"confused deputy\" attacks. If the role is intended for use by an external user, then MFA will strengthen the authentication by requiring a second factor.", "tool": "scout", "service": "iam"}, {"id": "rds_instance_backup_disabled", "title": "Instance Backups Disabled", "descriptiom": "The backup retention period is a period of time between 0 and 35 days for which you can perform a point-in-time restore. Setting the backup retention period to 0 disables automated backups. Backups should be enabled to enable disaster recovery.", "tool": "scout", "service": "rds"}, {"id": "iam_user_not_in_common_group", "title": "User Not in Common Group", "descriptiom": "This configuration goes against organizational policies.", "tool": "scout", "service": "iam"}, {"id": "redshift_cluster_no_version_upgrade", "title": "Version Upgrade Disabled", "descriptiom": "Version upgrade is necessary to ensure major version upgrades will be applied automatically to the cluster within the maintenance window.", "tool": "scout", "service": "redshift"}, {"id": "ec2_security_group_opens_plaintext_port", "title": "Security Group Opens _ARG_0_ Port", "descriptiom": "Ports associated with plaintext protocols have been found to be open in this security group. Plaintext protocols should be replaced with more secure alternatives, as the data in transit may be monitored and could, potentially, be subject to tampering.", "tool": "scout", "service": "ec2"}, {"id": "cloudtrail_no_data_logging", "title": "Data Events Logging Not Configured", "descriptiom": "CloudTrail Data Logging is not configured, which means that S3 access and Lambda invocations are not logged. <br><br>Note: S3 bucket logging can be used in place of CloudTrail data events for S3. If that is the case, logs for Lambda invocations may still be missing.", "tool": "scout", "service": "cloudtrail"}, {"id": "ec2_ebs_snapshot_public", "title": "Public EBS Snapshot", "descriptiom": "Snapshots should never be public, as this risks exposing sensitive data.", "tool": "scout", "service": "ec2"}, {"id": "ec2_instance_in_security_group", "title": "EC2 Instance Belongs to Specific Security Group", "descriptiom": "This configuration goes against organizational policies.", "tool": "scout", "service": "ec2"}, {"id": "ec2_security_group_opens_all_ports_to_all", "title": "Security Group Opens All Ports to All", "descriptiom": "It was detected that all ports in the security group are open, and any source IP address could send traffic to these ports, which creates a wider attack surface for resources assigned to it. Open ports should be reduced to the minimum needed to correctly operate and, when possible, source address restrictions should be implemented.", "tool": "scout", "service": "ec2"}, {"id": "iam_root_account_used_recently", "title": "Root Account Used Recently", "descriptiom": "The root account is the most privileged user in an account. As a best practice, the root account should only be used when required for root-only tasks.", "tool": "scout", "service": "iam"}, {"id": "rds_instance_short_backup_retention_period", "title": "Short Backup Retention Period", "descriptiom": "The backup retention period is a period of time between 0 and 35 days for which you can perform a point-in-time restore. Setting the backup retention period to 0 disables automated backups.<br><br>It is recommended that the retention period is set to at least 30 days. Having a short retention period will impact how far back in time the database can be restored to, and may affect integrity and availability of data.", "tool": "scout", "service": "rds"}, {"id": "ec2_security_group_whitelists_aws_ip_from_banned_region", "title": "Security Group Whitelists AWS IPs Outside the USA", "descriptiom": "This configuration goes against organizational policies.", "tool": "scout", "service": "ec2"}, {"id": "s3_bucket_no_default_encryption", "title": "Bucket without Default Encryption Enabled", "descriptiom": "Amazon S3 default encryption provides a way to set the default encryption behavior for an S3 bucket. This will ensure data-at-rest is encrypted", "tool": "scout", "service": "s3"}, {"id": "logs_no_alarm_root_usage", "title": "No CloudWatch Alarm for \"Root Account Usage\"", "descriptiom": "There was no CloudWatch alarm for the usage of the root account. Monitoring for root account log ins will provide visibility into the use of a fully privileged account.", "tool": "scout", "service": "logs"}, {"id": "sqs_queue_world_policy", "title": "_ARG_0_ Authorized to All Principals", "descriptiom": "Allowing IAM actions to all principals is contrary to the principle of least privilege and presents an opportunity for abuse. This policy should be reviewed to ensure it is secure and in line with the resource's intended use.", "tool": "scout", "service": "sqs"}, {"id": "iam_user_without_mfa", "title": "User without MFA", "descriptiom": "All IAM users should have MFA. MFA adds an extra layer of protection on top of a user name and password. With MFA enabled, when a user signs in to an AWS website, they're prompted for their user name and password and for an authentication code from their AWS MFA device.", "tool": "scout", "service": "iam"}, {"id": "acm_certificate_with_close_expiration_date", "title": "ACM Certificate Expiring in Less Than _ARG_0_ Days", "descriptiom": "Ensure that certificates which are in use are not about to expire.", "tool": "scout", "service": "acm"}, {"id": "iam_password_policy_no_uppercase_required", "title": "Password Policy Lacks Uppercase Requirement", "descriptiom": "The password policy did not require the use of at least one uppercase character. As a result, password complexity requirements were not in line with security best practice.", "tool": "scout", "service": "iam"}, {"id": "rds_instance_ca_certificate_deprecated", "title": "Deprecated Certificate Authority Assigned to RDS Instance", "descriptiom": "Amazon Web Services is deprecating the RDS Certificate Authority created in 2015 (rds-ca-2015). Any endpoints using TLS to protect RDS communications will fail after March 5th, 2020.", "tool": "scout", "service": "rds"}, {"id": "logs_no_alarm_unauthorized_api_calls", "title": "No CloudWatch Alarm for \"Unauthorized API Calls\"", "descriptiom": "There was no CloudWatch alarm for unauthorized API calls. Monitoring for unauthorized API calls helps reveal application errors and detect malicious activity.", "tool": "scout", "service": "logs"}, {"id": "logs_no_alarm_iam_policy_changes", "title": "No CloudWatch Alarm for \"IAM Policy Changes\"", "descriptiom": "There was no CloudWatch alarm to monitor IAM policy changes. Monitoring for IAM policy changes will help ensure authentication and authorization control remain intact.", "tool": "scout", "service": "logs"}, {"id": "cloudtrail_duplicated_global_services_logging", "title": "Global Service Logging Duplicated", "descriptiom": "Global service logging is enabled in multiple Trails. While this does not jeopardize the security of the environment, duplicated entries in logs increase the difficulty to investigate potential incidents.", "tool": "scout", "service": "cloudtrail"}, {"id": "sns_topic_world_policy", "title": "_ARG_0_ Authorized to All Principals", "descriptiom": "Allowing IAM actions to all principals is contrary to the principle of least privilege and presents an opportunity for abuse. This policy should be reviewed to ensure it is secure and in line with the resource's intended use.", "tool": "scout", "service": "sns"}, {"id": "iam_no_support_role", "title": "No Authorized User to Manage Incidents with AWS Support", "descriptiom": "The <samp>arn:aws:iam::aws:policy/AWSSupportAccess</samp> AWS Managed Policy was not found to be attached to any principal. There should be at least one user authorized to manage incidents with AWS Support.", "tool": "scout", "service": "iam"}, {"id": "iam_user_with_policies", "title": "User with _ARG_0_ Policies", "descriptiom": "The user was found to be attached to inline policies. This can increase the complexity in user and policy management, and increase the risk of the user being assigned or retaining excessive permissions.", "tool": "scout", "service": "iam"}, {"id": "ec2_default_security_group_with_rules", "title": "Non-empty Rulesets for Default Security Groups", "descriptiom": "The default security group created in each VPC comes with rules allowing all inbound traffic from instances assigned to the same security group, as well as all outbound traffic. In order to improve system hardening, you should remove all rules from the default security groups so that they restricts all traffic. Should an instance be created without custom security groups, it will inherit the default security group and be unable to communicate with other instances within the VPC until the required custom security groups are assigned.", "tool": "scout", "service": "ec2"}, {"id": "ses_identity_world_policy", "title": "_ARG_0_ Authorized to All Principals", "descriptiom": "Allowing IAM actions to all principals is contrary to the principle of least privilege and presents an opportunity for abuse. This policy should be reviewed to ensure it is secure and in line with the resource's intended use.", "tool": "scout", "service": "ses"}, {"id": "iam_lightspin_user_action_denied_for_group", "title": "Policy with Denied User Actions for Group Objects", "descriptiom": "When a deny policy is specified for User object actions on a group resource, this will only affect the specific IAM group but not the group members. This could lead to privilege escalation if the user can perform other privileged actions targeting the specific members of the group.", "tool": "scout", "service": "iam"}, {"id": "rds_instance_single_az", "title": "Single AZ RDS Instance", "descriptiom": "In case of failure, with a single-AZ deployment configuration, should an availability zone specific database failure occur, Amazon RDS can not automatically fail over to the standby availability zone.", "tool": "scout", "service": "rds"}, {"id": "redshift_security_group_whitelists_all", "title": "Security Group Allows All Traffic", "descriptiom": "The security group allows access to Redshift instances from any source address, which creates a wider attack surface for resources assigned to it. Source address restrictions should be implemented", "tool": "scout", "service": "redshift"}, {"id": "logs_no_alarm_network_gateways_changes", "title": "No CloudWatch Alarm for \"Network Gateways Changes\"", "descriptiom": "There was no CloudWatch alarm to monitor changes in network gateways. Monitoring for network gateways changes will help ensure that all traffic traverses the VPC border via a controlled path.", "tool": "scout", "service": "logs"}, {"id": "route53_domain_transferlock_not_authorized", "title": "Domain Transfer Lock Not Supported by TLD", "descriptiom": "A domain lock prevents someone from transferring your domain to another registrar without your permission. Your domain's TLD does not support this feature.", "tool": "scout", "service": "route53"}, {"id": "logs_no_alarm_security_group_changes", "title": "No CloudWatch Alarm for \"Security Group Changes\"", "descriptiom": "There was no CloudWatch alarm to monitor changes to security groups. Monitoring for security group changes will help ensure that no service or resource is unintentionally exposed.", "tool": "scout", "service": "logs"}, {"id": "iam_password_policy_reuse_enabled", "title": "Password Policy Allows the Reuse of Passwords", "descriptiom": "The password policy allowed password reuse. As a result, password complexity requirements were not in line with security best practice.", "tool": "scout", "service": "iam"}, {"id": "iam_inline_policy_allows_NotActions", "title": "Inline _ARG_0_ Policy Allows \"NotActions\"", "descriptiom": "The combination of \"effect = allow\" and \"NotAction\" results in the policy allowing every action except those listed in the statement. The target policy does not follow the principle of least privilege because thousands of actions exist in AWS and because this policy automatically authorizes users to perform new actions created, regardless of their nature.", "tool": "scout", "service": "iam"}, {"id": "elbv2_listener_allowing_cleartext", "title": "Load Balancer Allowing Clear Text (HTTP) Communication", "descriptiom": "Use of a secure protocol (HTTPS or SSL) is best practice for encrypted communication. A load balancer without a listener using an encrypted protocol can be vulnerable to eavesdropping and man-in-the-middle attacks.", "tool": "scout", "service": "elbv2"}, {"id": "ec2_instance_types", "title": "Use of _ARG_0_ Instances", "descriptiom": "Policies dictate _ARG_0_ EC2 instances should not be used in this environment", "tool": "scout", "service": "ec2"}, {"id": "iam_root_account_with_active_certs", "title": "Root Account Has Active X.509 Certs", "descriptiom": "Root account X.509 certificates should be deleted as they may be used to make SOAP-protocol requests in the context of the root account.", "tool": "scout", "service": "iam"}, {"id": "logs_no_alarm_vpc_changes", "title": "No CloudWatch Alarm for \"VPC Changes\"", "descriptiom": "There was no CloudWatch alarm to monitor VPC changes. Monitoring for VPC changes will help ensure authentication and authorization controls remain intact.", "tool": "scout", "service": "logs"}, {"id": "ec2_security_group_whitelists_non_elastic_ips", "title": "Security Group Whitelists Non-Elastic IP Addresses", "descriptiom": "This configuration goes against organizational policies.", "tool": "scout", "service": "ec2"}, {"id": "ec2_security_group_opens_all_ports", "title": "Security Group Opens All Ports", "descriptiom": "It was detected that all ports in the security group are open, which creates a wider attack surface for resources assigned to it. Open ports should be reduced to the minimum needed to correctly operate.", "tool": "scout", "service": "ec2"}, {"id": "logs_no_alarm_s3_policy_changes", "title": "No CloudWatch Alarm for \"S3 Bucket Policy Changes\"", "descriptiom": "There was no CloudWatch alarm to detect changes in S3 bucket policy changes. Monitoring for changes in S3 bucket policy changes may reduce the time to detect and fix permissive policies on sensitive S3 buckets.", "tool": "scout", "service": "logs"}, {"id": "cloudwatch_alarm_without_actions", "title": "Alarm without Action", "descriptiom": "Each alarm should have at least one action", "tool": "scout", "service": "cloudwatch"}, {"id": "kms_cmk_rotation_disabled", "title": "KMS Customer Master Keys (CMKs) with Rotation Disabled", "descriptiom": "Cryptographic best practices discourage extensive reuse of encryption keys. Consequently, Customer Master Keys (CMKs) should be rotated to prevent usage of compromised keys.<br><br>Note that AWS KMS supports optional automatic key rotation only for customer managed CMKs.", "tool": "scout", "service": "kms"}, {"id": "config_recorder_not_configured", "title": "AWS Config Not Enabled", "descriptiom": "No AWS Config recorders are configured, which means that changes in AWS resource configuration are not logged. This hinders security analysis, resource change tracking and compliance auditing.", "tool": "scout", "service": "config"}, {"id": "redshift_parameter_group_ssl_not_required", "title": "SSL Not Required", "descriptiom": "Parameter groups associated with Redshift clusters should have the \"require_ssl\" parameter enabled, to ensure that data in transit is encrypted.<br><br><b>Note</b> that this rule will only flag non-default parameter groups, as default parameter groups cannot be modified. It is recommended to use custom groups and configure them according to security best practice.", "tool": "scout", "service": "redshift"}, {"id": "iam_assume_role_no_mfa", "title": "AssumeRole Policy Lacks MFA", "descriptiom": "When authorizing assumption, MFA should be required.", "tool": "scout", "service": "iam"}, {"id": "iam_user_no_key_rotation", "title": "Lack of Key Rotation for (_ARG_0_) Days", "descriptiom": "In case of access key compromise, the lack of credential rotation increases the period during which an attacker has access to the AWS account.", "tool": "scout", "service": "iam"}, {"id": "ec2_instance_with_public_ip", "title": "Instance with a Public IP Address", "descriptiom": "It is good practice to maintain a list of known, publicly accessible instances and flag all other instances that meet this criteria.", "tool": "scout", "service": "ec2"}, {"id": "rds_postgres_instance_with_invalid_certificate", "title": "Legacy SSL Certificate (PostgreSQL)", "descriptiom": "This instance was created prior to August 5, 2014. Consequently, it uses the DB instance endpoint in the Common Name (CN) field of the SSL certificate. Prior to August 5, 2014, SSL certificate verification was not available for VPC-based SQL Server instances. If you have a VPC-based SQL Server DB instance that was created before August 5, 2014, and you want to use SSL certificate verification and ensure that the instance endpoint is included as the CN for the SSL certificate for that DB instance, then rename the instance. When you rename a DB instance, a new certificate is deployed and the instance is rebooted to enable the new certificate.", "tool": "scout", "service": "rds"}, {"id": "cloudtrail_no_encryption_with_kms", "title": "CloudTrail Logs Not Encrypted with KMS Customer Master Keys (CMKs)", "descriptiom": "Not encrypting CloudTrail logs with SSE-KMS affects the confidentiality of the log data.", "tool": "scout", "service": "cloudtrail"}, {"id": "s3_bucket_no_versioning", "title": "Bucket without Versioning", "descriptiom": "Versioning is a means of keeping multiple variants of an object in the same bucket. With versioning, you can easily recover from both unintended user actions and application failures.", "tool": "scout", "service": "s3"}, {"id": "elbv2_http_request_smuggling", "title": "Drop Invalid Header Fields Disabled", "descriptiom": "Dropping invalid header fields should be enabled in order to mitigate the risk of request smuggling attacks.", "tool": "scout", "service": "elbv2"}, {"id": "ses_identity_dkim_not_enabled", "title": "DKIM Not Enabled", "descriptiom": "DKIM signing is not enabled for emails sent from the identity.", "tool": "scout", "service": "ses"}, {"id": "logs_no_alarm_console_authentication_failures", "title": "No CloudWatch Alarm for \"Failed Console Authentications\"", "descriptiom": "There was no CloudWatch alarm for failed console authentication requests. Monitoring for failed console authentications can decrease the lead time to detect brute force attacks.", "tool": "scout", "service": "logs"}, {"id": "iam_managed_policy_allows_NotActions", "title": "Managed Policy Allows \"NotActions\"", "descriptiom": "The combination of \"effect = allow\" and \"NotAction\" results in the policy allowing every action except those listed in the statement. The target policy does not follow the principle of least privilege because thousands of actions exist in AWS and because this policy automatically authorizes users to perform new actions created, regardless of their nature.", "tool": "scout", "service": "iam"}, {"id": "ec2_security_group_opens_port_range", "title": "Security Group Uses Port Range", "descriptiom": "It was found that the security group was using port ranges. Sometimes, ranges could include unintended ports that should not be exposed. As a result, when possible, explicit port lists should be used instead", "tool": "scout", "service": "ec2"}, {"id": "iam_role_with_inline_policies", "title": "Role with Inline Policies", "descriptiom": "An inline policy is a policy that's embedded in an IAM identity (a user, group, or role). These policies are harder to audit and manage, and should be deprecated in favor of managed policies.", "tool": "scout", "service": "iam"}, {"id": "iam_managed_policy_for_role", "title": "Managed Policy Allows \"_ARG_0_:_ARG_1_\" For All Resources", "descriptiom": "Using \"*\" for the resource field might grant permissions to more resources than necessary, potentially introducing privilege escalation scenarios.", "tool": "scout", "service": "iam"}, {"id": "elbv2_no_deletion_protection", "title": "Lack of Deletion Protection", "descriptiom": "Enabling deletion protection on load balancers mitigates risks of accidental deletion.", "tool": "scout", "service": "elbv2"}, {"id": "iam_assume_role_policy_allows_all", "title": "AssumeRole Policy Allows All Principals", "descriptiom": "Setting the AssumeRole policy's principal attribute to \"AWS:*\" means that anyone is authorized to assume the role and access the AWS account.", "tool": "scout", "service": "iam"}, {"id": "iam_password_policy_no_expiration", "title": "Password Expiration Disabled", "descriptiom": "Password expiration is disabled. As a result, compromised credentials could be used by potential attackers for a indefinite amount of time. Periodic password change enforced with an appropriate password expiration policy could help to mitigate this issue.", "tool": "scout", "service": "iam"}, {"id": "iam_password_policy_no_lowercase_required", "title": "Password Policy Lacks Lowercase Requirement", "descriptiom": "The password policy did not require the use of at least one lowercase character. As a result, password complexity requirements were not in line with security best practice.", "tool": "scout", "service": "iam"}, {"id": "vpc_subnet_with_bad_acls", "title": "Subnet with \"Allow All\" _ARG_0_ NACLs", "descriptiom": "Network ACLs associated with subnets and VPCs should not allow all _ARG_0_ traffic.", "tool": "scout", "service": "vpc"}, {"id": "iam_user_not_in_category_group", "title": "User Not in Category Group", "descriptiom": "This configuration goes against organizational policies.", "tool": "scout", "service": "iam"}, {"id": "ec2_ebs_snapshot_not_encrypted", "title": "EBS Snapshot Not Encrypted", "descriptiom": "Data-at-rest should be encrypted.", "tool": "scout", "service": "ec2"}, {"id": "s3_bucket_no_mfa_delete", "title": "Bucket without MFA Delete", "descriptiom": "Enable MFA delete to help protect objects from accidental or unauthorized deletion. It should be noted that MFA Delete can only be configured on buckets that have versioning enabled.", "tool": "scout", "service": "s3"}, {"id": "s3_bucket_allowing_cleartext", "title": "Bucket Allowing Clear Text (HTTP) Communication", "descriptiom": "If HTTPS is not enforced on the bucket policy, communication between clients and S3 buckets can use unencrypted HTTP. As a result, sensitive information could be transmitted in clear text over the network|Internet.", "tool": "scout", "service": "s3"}, {"id": "s3_bucket_world_policy_arg", "title": "_ARG_0_ Actions Authorized to All Principals", "descriptiom": "Allowing IAM actions to all principals is contrary to the principle of least privilege and presents an opportunity for abuse. This policy should be reviewed to ensure it is secure and in line with the resource's intended use.", "tool": "scout", "service": "s3"}, {"id": "rds_instance_publicly_accessible", "title": "RDS Instance Publicly Accessible", "descriptiom": "Instances should not be publicly accessible as this risks exposing sensitive data.", "tool": "scout", "service": "rds"}, {"id": "ec2_security_group_opens_all_ports_to_self", "title": "Unrestricted Network Traffic within Security Group", "descriptiom": "This configuration goes against organizational policies.", "tool": "scout", "service": "ec2"}, {"id": "iam_user_unused_access_key_initial_setup", "title": "Users with Access Keys Created during Initial Setup and Not Used", "descriptiom": "Not creating access keys during initial user setup will avoid unnecessary management work and give more control over keys used somewhere in the organization.", "tool": "scout", "service": "iam"}, {"id": "rds_instance_no_minor_upgrade", "title": "Auto Minor Version Upgrade Disabled", "descriptiom": "Auto Minor Version Upgrade is a feature that you can enable to have your database automatically upgraded when a new minor database engine version is available. Minor version upgrades often patch security vulnerabilities and fix bugs, and therefor should be applied.", "tool": "scout", "service": "rds"}, {"id": "vpc_subnet_with_default_acls", "title": "Subnet with Default _ARG_0_ NACLs", "descriptiom": "Default _ARG_0_ network access control lists allow all network traffic (all protocols, IPs, and _ARG_1_), hence do not provide the secondary layer of security network ACLs are supposed to.", "tool": "scout", "service": "vpc"}, {"id": "ec2_instance_with_user_data_secrets", "title": "Potential Secret in Instance User Data", "descriptiom": "It was detected that the EC2 instance was configured with user data, which could potentially include secrets. Although user data can only be accessed from within the instance itself, the data is not protected by cryptographic methods. Anyone who can access the instance can view its metadata. It should therefore be ensured that sensitive data, such as passwords and SSH keys, are not stored as user data.", "tool": "scout", "service": "ec2"}, {"id": "vpc_subnet_without_flow_log", "title": "Subnet without a Flow Log", "descriptiom": "Flow logs enable the investigation of incidents involving unauthorized network traffic, such as an attacker exfiltrating data or pivoting to other hosts.", "tool": "scout", "service": "vpc"}, {"id": "iam_group_with_inline_policies", "title": "Group with Inline Policies", "descriptiom": "An inline policy is a policy that's embedded in an IAM identity (a user, group, or role). These policies are harder to audit and manage, and should be deprecated in favor of managed policies.", "tool": "scout", "service": "iam"}, {"id": "iam_group_with_no_users", "title": "Group with No Users", "descriptiom": "Groups with no users should be reviewed and deleted if not necessary.", "tool": "scout", "service": "iam"}, {"id": "ec2_ami_public", "title": "Publicly Accessible AMI", "descriptiom": "AMIs should never intentionally be made public. If they need to be shared this can be done with specific AWS accounts.", "tool": "scout", "service": "ec2"}, {"id": "rds_instance_storage_not_encrypted", "title": "Instance Storage Not Encrypted", "descriptiom": "Data-at-rest should be encrypted.", "tool": "scout", "service": "rds"}, {"id": "iam_inline_policy_allows_non_sts_action", "title": "Inline _ARG_0_ Policy Allows Non STS Action", "descriptiom": "When the principle of least privilege is implemented by exclusively using roles for privilege management, users should only be granted permissions to assume roles. This policy may violate that organizational standard.", "tool": "scout", "service": "iam"}, {"id": "iam_password_policy_no_number_required", "title": "Password Policy Lacks Number Requirement", "descriptiom": "The password policy did not require the use of at least one number. As a result, password complexity requirements were not in line with security best practice.", "tool": "scout", "service": "iam"}, {"id": "ec2_security_group_whitelists_unknown_aws", "title": "Security Group Whitelists Unknown AWS CIDRs", "descriptiom": "This configuration goes against organizational policies.", "tool": "scout", "service": "ec2"}, {"id": "iam_unused_credentials_not_disabled", "title": "Credentials Unused for _ARG_0_ Days or Greater Are Not Disabled", "descriptiom": "Disabling or removing unnecessary credentials will reduce the window of opportunity for compromised accounts to be used.", "tool": "scout", "service": "iam"}, {"id": "ec2_security_group_opens_icmp_to_all", "title": "Security Group Allows ICMP Traffic to All", "descriptiom": "ICMP traffic was allowed to the resources assigned to this security group without restriction of the source address. This could potentially be leveraged by an attacker trying to perform an attack or gather information about the deployed infrastructure.", "tool": "scout", "service": "ec2"}, {"id": "iam_password_policy_expiration_threshold", "title": "Passwords Expire after _ARG_0_ Days", "descriptiom": "Password expiration is disabled, or expiration time is set to a too high value. As a result, compromised credentials could be used by potential attackers for a larger period of time. Periodic password change enforced with an appropriate password expiration policy could help to mitigate this issue.", "tool": "scout", "service": "iam"}, {"id": "elb_no_access_logs", "title": "Lack of ELB Access Logs", "descriptiom": "Elastic Load Balancing provides access logs that capture detailed information about requests sent to your load balancer. Each log contains information such as the time the request was received, the client's IP address, latencies, request paths, and server responses. You can use these access logs to analyze traffic patterns and identify security issues.", "tool": "scout", "service": "elb"}, {"id": "cloudfront_distribution_insufficient_viewer_security", "title": "Content Distribution with Insufficient Viewer Security Policy", "descriptiom": "Distributing content between AWS CloudFront distributions and their custom origins without the use of a valid certificate, can potentially expose sensitive data.", "tool": "scout", "service": "cloudfront"}, {"id": "vpc_routing_tables_with_peering", "title": "Routing Table with VPC Peering", "descriptiom": "Being highly selective in peering routing tables minimizes the impact of breach as resources outside of these routes are inaccessible to the peered VPC.", "tool": "scout", "service": "vpc"}, {"id": "iam_user_with_password_and_key", "title": "User with Password and Keys Enabled", "descriptiom": "The user was found to have configured with both password and API keys for authentication. This is considered against security best practice.", "tool": "scout", "service": "iam"}]